// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cordic_atan2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y0_V,
        x0_V,
        zn_V_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'b1;
parameter    ap_ST_fsm_pp0_stage0 = 3'b10;
parameter    ap_ST_fsm_state4 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv16_E6DF = 16'b1110011011011111;
parameter    ap_const_lv16_1921 = 16'b1100100100001;
parameter    ap_const_lv16_3243 = 16'b11001001000011;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv16_CDBD = 16'b1100110110111101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] y0_V;
input  [11:0] x0_V;
input  [15:0] zn_V_read;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [3:0] atan_2Mi_V_address0;
reg    atan_2Mi_V_ce0;
wire   [11:0] atan_2Mi_V_q0;
reg   [15:0] p_Val2_42_reg_100;
reg   [17:0] p_Val2_39_reg_112;
reg   [17:0] p_Val2_s_reg_121;
reg   [3:0] p_3_reg_130;
wire   [17:0] x_V_1_cast_fu_181_p1;
wire   [17:0] y_V_1_cast_fu_207_p1;
wire   [0:0] tmp_s_fu_211_p2;
reg   [0:0] tmp_s_reg_523;
wire   [0:0] tmp_142_fu_217_p2;
reg   [0:0] tmp_142_reg_527;
wire   [0:0] sel_tmp8_fu_313_p2;
reg   [0:0] sel_tmp8_reg_531;
wire   [2:0] quadrant_3_fu_333_p3;
reg   [2:0] quadrant_3_reg_535;
wire   [15:0] storemerge_cast_cast_fu_341_p3;
wire   [15:0] storemerge1_cast_cas_fu_349_p3;
wire   [0:0] tmp_149_fu_357_p2;
reg   [0:0] tmp_149_reg_552;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [3:0] i_V_fu_363_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] dneg_fu_369_p2;
reg   [0:0] dneg_reg_561;
wire   [17:0] yp_V_3_fu_426_p3;
wire   [17:0] xp_V_3_fu_434_p3;
wire   [15:0] zp_V_3_fu_458_p3;
reg    ap_enable_reg_pp0_iter1;
reg   [15:0] ssdm_int_V_write_ass_phi_fu_144_p12;
reg   [15:0] ssdm_int_V_write_ass_reg_141;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] tmp_151_fu_465_p2;
wire   [15:0] p_Val2_s_21_fu_501_p2;
wire   [0:0] tmp_154_fu_470_p2;
wire   [15:0] p_Val2_40_fu_494_p2;
wire   [15:0] phitmp_fu_486_p3;
wire   [63:0] tmp_153_fu_403_p1;
wire   [0:0] tmp_fu_159_p3;
wire   [11:0] x_V_1_1_fu_167_p2;
wire   [11:0] x_V_1_fu_173_p3;
wire   [0:0] tmp_152_fu_185_p3;
wire   [11:0] y_V_fu_193_p2;
wire   [11:0] y_V_1_fu_199_p3;
wire   [0:0] tmp_143_fu_223_p2;
wire   [0:0] tmp_144_fu_229_p2;
wire   [11:0] tmp_147_fu_247_p2;
wire   [0:0] tmp_145_fu_235_p2;
wire   [0:0] tmp_148_fu_261_p2;
wire   [0:0] tmp_137_fu_275_p2;
wire   [2:0] p_s_fu_267_p3;
wire   [0:0] tmp_146_fu_241_p2;
wire   [0:0] sel_tmp2_fu_289_p2;
wire   [0:0] sel_tmp7_demorgan_fu_301_p2;
wire   [0:0] tmp_159_fu_253_p3;
wire   [0:0] sel_tmp7_fu_307_p2;
wire   [0:0] sel_tmp3_fu_295_p2;
wire   [0:0] tmp_138_fu_327_p2;
wire   [2:0] sel_tmp4_cast_fu_319_p3;
wire   [2:0] sel_tmp_fu_281_p3;
wire   [17:0] sh_cast_fu_375_p1;
wire   [17:0] p_Val2_43_fu_379_p2;
wire   [17:0] p_Val2_44_fu_391_p2;
wire   [17:0] p_Val2_46_fu_408_p2;
wire   [17:0] yp_V_fu_397_p2;
wire   [17:0] yp_V_1_fu_420_p2;
wire   [17:0] xp_V_fu_385_p2;
wire   [17:0] xp_V_1_fu_414_p2;
wire   [15:0] p_Val2_43_cast_fu_442_p1;
wire   [15:0] zp_V_1_1_fu_446_p2;
wire   [15:0] zp_V_1_fu_452_p2;
wire   [0:0] tmp_155_fu_475_p2;
wire   [15:0] p_Val2_41_fu_480_p2;
reg   [15:0] ap_return_preg;
reg   [2:0] ap_NS_fsm;
reg    ap_condition_398;
reg    ap_condition_402;
reg    ap_condition_367;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 16'b0000000000000000;
end

cordic_atan2_atanbkb #(
    .DataWidth( 12 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
atan_2Mi_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(atan_2Mi_V_address0),
    .ce0(atan_2Mi_V_ce0),
    .q0(atan_2Mi_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_149_fu_357_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == tmp_149_fu_357_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_149_fu_357_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv16_0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_preg <= ssdm_int_V_write_ass_phi_fu_144_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == tmp_149_fu_357_p2))) begin
        p_3_reg_130 <= i_V_fu_363_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
        p_3_reg_130 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == tmp_149_fu_357_p2))) begin
        p_Val2_39_reg_112 <= yp_V_3_fu_426_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
        p_Val2_39_reg_112 <= y_V_1_cast_fu_207_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == tmp_149_reg_552))) begin
        p_Val2_42_reg_100 <= zp_V_3_fu_458_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
        p_Val2_42_reg_100 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == tmp_149_fu_357_p2))) begin
        p_Val2_s_reg_121 <= xp_V_3_fu_434_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
        p_Val2_s_reg_121 <= x_V_1_cast_fu_181_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_151_fu_465_p2) & (tmp_s_reg_523 == 1'b0) & (tmp_142_reg_527 == 1'b0) & (1'b0 == tmp_154_fu_470_p2) & (1'b0 == sel_tmp8_reg_531))) begin
        ssdm_int_V_write_ass_reg_141 <= phitmp_fu_486_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_151_fu_465_p2) & (tmp_s_reg_523 == 1'b0) & (tmp_142_reg_527 == 1'b0) & (1'b0 == tmp_154_fu_470_p2) & ~(1'b0 == sel_tmp8_reg_531))) begin
        ssdm_int_V_write_ass_reg_141 <= p_Val2_40_fu_494_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_151_fu_465_p2) & (tmp_s_reg_523 == 1'b0) & (tmp_142_reg_527 == 1'b0) & ~(1'b0 == tmp_154_fu_470_p2))) begin
        ssdm_int_V_write_ass_reg_141 <= p_Val2_s_21_fu_501_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_151_fu_465_p2) & (tmp_s_reg_523 == 1'b0) & (tmp_142_reg_527 == 1'b0))) begin
        ssdm_int_V_write_ass_reg_141 <= p_Val2_42_reg_100;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & ~(tmp_142_fu_217_p2 == 1'b0))) begin
        ssdm_int_V_write_ass_reg_141 <= storemerge_cast_cast_fu_341_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_s_fu_211_p2 == 1'b0))) begin
        ssdm_int_V_write_ass_reg_141 <= storemerge1_cast_cas_fu_349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == tmp_149_fu_357_p2))) begin
        dneg_reg_561 <= dneg_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
        quadrant_3_reg_535 <= quadrant_3_fu_333_p3;
        sel_tmp8_reg_531 <= sel_tmp8_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0))) begin
        tmp_142_reg_527 <= tmp_142_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        tmp_149_reg_552 <= tmp_149_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_s_reg_523 <= tmp_s_fu_211_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return = ssdm_int_V_write_ass_phi_fu_144_p12;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        atan_2Mi_V_ce0 = 1'b1;
    end else begin
        atan_2Mi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_condition_367 == 1'b1)) begin
        if ((ap_condition_402 == 1'b1)) begin
            ssdm_int_V_write_ass_phi_fu_144_p12 = phitmp_fu_486_p3;
        end else if ((ap_condition_398 == 1'b1)) begin
            ssdm_int_V_write_ass_phi_fu_144_p12 = p_Val2_40_fu_494_p2;
        end else if (((1'b0 == tmp_151_fu_465_p2) & ~(1'b0 == tmp_154_fu_470_p2))) begin
            ssdm_int_V_write_ass_phi_fu_144_p12 = p_Val2_s_21_fu_501_p2;
        end else if (~(1'b0 == tmp_151_fu_465_p2)) begin
            ssdm_int_V_write_ass_phi_fu_144_p12 = p_Val2_42_reg_100;
        end else begin
            ssdm_int_V_write_ass_phi_fu_144_p12 = ssdm_int_V_write_ass_reg_141;
        end
    end else begin
        ssdm_int_V_write_ass_phi_fu_144_p12 = ssdm_int_V_write_ass_reg_141;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & (~(tmp_142_fu_217_p2 == 1'b0) | ~(tmp_s_fu_211_p2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(ap_start == 1'b0) & (tmp_s_fu_211_p2 == 1'b0) & (tmp_142_fu_217_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == tmp_149_fu_357_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_2];

always @ (*) begin
    ap_condition_367 = ((1'b1 == ap_CS_fsm_state4) & (tmp_s_reg_523 == 1'b0) & (tmp_142_reg_527 == 1'b0));
end

always @ (*) begin
    ap_condition_398 = ((1'b0 == tmp_151_fu_465_p2) & (1'b0 == tmp_154_fu_470_p2) & ~(1'b0 == sel_tmp8_reg_531));
end

always @ (*) begin
    ap_condition_402 = ((1'b0 == tmp_151_fu_465_p2) & (1'b0 == tmp_154_fu_470_p2) & (1'b0 == sel_tmp8_reg_531));
end

assign atan_2Mi_V_address0 = tmp_153_fu_403_p1;

assign dneg_fu_369_p2 = (($signed(p_Val2_39_reg_112) > $signed(18'b000000000000000000)) ? 1'b1 : 1'b0);

assign i_V_fu_363_p2 = (p_3_reg_130 + ap_const_lv4_1);

assign p_Val2_40_fu_494_p2 = ($signed(p_Val2_42_reg_100) + $signed(ap_const_lv16_CDBD));

assign p_Val2_41_fu_480_p2 = (ap_const_lv16_0 - p_Val2_42_reg_100);

assign p_Val2_43_cast_fu_442_p1 = atan_2Mi_V_q0;

assign p_Val2_43_fu_379_p2 = p_Val2_39_reg_112 >> sh_cast_fu_375_p1;

assign p_Val2_44_fu_391_p2 = $signed(p_Val2_s_reg_121) >>> sh_cast_fu_375_p1;

assign p_Val2_46_fu_408_p2 = $signed(p_Val2_39_reg_112) >>> sh_cast_fu_375_p1;

assign p_Val2_s_21_fu_501_p2 = (ap_const_lv16_3243 - p_Val2_42_reg_100);

assign p_s_fu_267_p3 = ((tmp_145_fu_235_p2[0:0] === 1'b1) ? ap_const_lv3_1 : ap_const_lv3_4);

assign phitmp_fu_486_p3 = ((tmp_155_fu_475_p2[0:0] === 1'b1) ? p_Val2_41_fu_480_p2 : zn_V_read);

assign quadrant_3_fu_333_p3 = ((tmp_138_fu_327_p2[0:0] === 1'b1) ? sel_tmp4_cast_fu_319_p3 : sel_tmp_fu_281_p3);

assign sel_tmp2_fu_289_p2 = (tmp_145_fu_235_p2 ^ 1'b1);

assign sel_tmp3_fu_295_p2 = (tmp_146_fu_241_p2 & sel_tmp2_fu_289_p2);

assign sel_tmp4_cast_fu_319_p3 = ((sel_tmp8_fu_313_p2[0:0] === 1'b1) ? ap_const_lv3_3 : ap_const_lv3_2);

assign sel_tmp7_demorgan_fu_301_p2 = (tmp_145_fu_235_p2 | tmp_146_fu_241_p2);

assign sel_tmp7_fu_307_p2 = (sel_tmp7_demorgan_fu_301_p2 ^ 1'b1);

assign sel_tmp8_fu_313_p2 = (tmp_159_fu_253_p3 & sel_tmp7_fu_307_p2);

assign sel_tmp_fu_281_p3 = ((tmp_137_fu_275_p2[0:0] === 1'b1) ? p_s_fu_267_p3 : ap_const_lv3_0);

assign sh_cast_fu_375_p1 = p_3_reg_130;

assign storemerge1_cast_cas_fu_349_p3 = ((tmp_fu_159_p3[0:0] === 1'b1) ? ap_const_lv16_3243 : ap_const_lv16_0);

assign storemerge_cast_cast_fu_341_p3 = ((tmp_152_fu_185_p3[0:0] === 1'b1) ? ap_const_lv16_E6DF : ap_const_lv16_1921);

assign tmp_137_fu_275_p2 = (tmp_145_fu_235_p2 | tmp_148_fu_261_p2);

assign tmp_138_fu_327_p2 = (sel_tmp8_fu_313_p2 | sel_tmp3_fu_295_p2);

assign tmp_142_fu_217_p2 = ((x0_V == ap_const_lv12_0) ? 1'b1 : 1'b0);

assign tmp_143_fu_223_p2 = (($signed(x0_V) > $signed(12'b000000000000)) ? 1'b1 : 1'b0);

assign tmp_144_fu_229_p2 = (($signed(y0_V) > $signed(12'b000000000000)) ? 1'b1 : 1'b0);

assign tmp_145_fu_235_p2 = (tmp_143_fu_223_p2 & tmp_144_fu_229_p2);

assign tmp_146_fu_241_p2 = (tmp_fu_159_p3 & tmp_144_fu_229_p2);

assign tmp_147_fu_247_p2 = (y0_V & x0_V);

assign tmp_148_fu_261_p2 = (tmp_143_fu_223_p2 & tmp_152_fu_185_p3);

assign tmp_149_fu_357_p2 = ((p_3_reg_130 == ap_const_lv4_9) ? 1'b1 : 1'b0);

assign tmp_151_fu_465_p2 = ((quadrant_3_reg_535 == ap_const_lv3_1) ? 1'b1 : 1'b0);

assign tmp_152_fu_185_p3 = y0_V[ap_const_lv32_B];

assign tmp_153_fu_403_p1 = p_3_reg_130;

assign tmp_154_fu_470_p2 = ((quadrant_3_reg_535 == ap_const_lv3_2) ? 1'b1 : 1'b0);

assign tmp_155_fu_475_p2 = ((quadrant_3_reg_535 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign tmp_159_fu_253_p3 = tmp_147_fu_247_p2[ap_const_lv32_B];

assign tmp_fu_159_p3 = x0_V[ap_const_lv32_B];

assign tmp_s_fu_211_p2 = ((y0_V == ap_const_lv12_0) ? 1'b1 : 1'b0);

assign x_V_1_1_fu_167_p2 = (ap_const_lv12_0 - x0_V);

assign x_V_1_cast_fu_181_p1 = x_V_1_fu_173_p3;

assign x_V_1_fu_173_p3 = ((tmp_fu_159_p3[0:0] === 1'b1) ? x_V_1_1_fu_167_p2 : x0_V);

assign xp_V_1_fu_414_p2 = (p_Val2_s_reg_121 - p_Val2_46_fu_408_p2);

assign xp_V_3_fu_434_p3 = ((dneg_fu_369_p2[0:0] === 1'b1) ? xp_V_fu_385_p2 : xp_V_1_fu_414_p2);

assign xp_V_fu_385_p2 = (p_Val2_43_fu_379_p2 + p_Val2_s_reg_121);

assign y_V_1_cast_fu_207_p1 = y_V_1_fu_199_p3;

assign y_V_1_fu_199_p3 = ((tmp_152_fu_185_p3[0:0] === 1'b1) ? y_V_fu_193_p2 : y0_V);

assign y_V_fu_193_p2 = (ap_const_lv12_0 - y0_V);

assign yp_V_1_fu_420_p2 = (p_Val2_44_fu_391_p2 + p_Val2_39_reg_112);

assign yp_V_3_fu_426_p3 = ((dneg_fu_369_p2[0:0] === 1'b1) ? yp_V_fu_397_p2 : yp_V_1_fu_420_p2);

assign yp_V_fu_397_p2 = (p_Val2_39_reg_112 - p_Val2_44_fu_391_p2);

assign zp_V_1_1_fu_446_p2 = (p_Val2_43_cast_fu_442_p1 + p_Val2_42_reg_100);

assign zp_V_1_fu_452_p2 = (p_Val2_42_reg_100 - p_Val2_43_cast_fu_442_p1);

assign zp_V_3_fu_458_p3 = ((dneg_reg_561[0:0] === 1'b1) ? zp_V_1_1_fu_446_p2 : zp_V_1_fu_452_p2);

endmodule //cordic_atan2
