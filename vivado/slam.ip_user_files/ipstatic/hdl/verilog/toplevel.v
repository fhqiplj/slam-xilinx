// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="toplevel,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.520750,HLS_SYN_LAT=2109,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=5896,HLS_SYN_LUT=11270}" *)

module toplevel (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_TDATA,
        input_V_TVALID,
        input_V_TREADY,
        output_V_TDATA,
        output_V_TVALID,
        output_V_TREADY
);

parameter    ap_ST_fsm_state1 = 108'b1;
parameter    ap_ST_fsm_state2 = 108'b10;
parameter    ap_ST_fsm_state3 = 108'b100;
parameter    ap_ST_fsm_state4 = 108'b1000;
parameter    ap_ST_fsm_state5 = 108'b10000;
parameter    ap_ST_fsm_state6 = 108'b100000;
parameter    ap_ST_fsm_state7 = 108'b1000000;
parameter    ap_ST_fsm_state8 = 108'b10000000;
parameter    ap_ST_fsm_state9 = 108'b100000000;
parameter    ap_ST_fsm_state10 = 108'b1000000000;
parameter    ap_ST_fsm_state11 = 108'b10000000000;
parameter    ap_ST_fsm_state12 = 108'b100000000000;
parameter    ap_ST_fsm_state13 = 108'b1000000000000;
parameter    ap_ST_fsm_state14 = 108'b10000000000000;
parameter    ap_ST_fsm_state15 = 108'b100000000000000;
parameter    ap_ST_fsm_state16 = 108'b1000000000000000;
parameter    ap_ST_fsm_state17 = 108'b10000000000000000;
parameter    ap_ST_fsm_state18 = 108'b100000000000000000;
parameter    ap_ST_fsm_state19 = 108'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 108'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 108'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 108'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 108'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 108'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 108'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 108'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 108'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 108'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 108'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 108'b100000000000000000000000000000;
parameter    ap_ST_fsm_state31 = 108'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state32 = 108'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state33 = 108'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 108'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 108'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state36 = 108'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 108'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 108'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 108'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 108'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 108'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state42 = 108'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 108'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state44 = 108'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state45 = 108'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state46 = 108'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state47 = 108'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state48 = 108'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state49 = 108'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state50 = 108'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 108'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 108'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 108'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 108'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 108'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 108'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 108'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 108'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 108'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 108'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 108'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 108'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 108'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 108'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 108'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 108'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 108'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 108'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 108'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state89 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state90 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state91 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state92 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state93 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state94 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state95 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state96 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state97 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state98 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state99 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state100 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state101 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state102 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state103 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state104 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state105 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state106 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state107 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state108 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_E0000000 = 32'b11100000000000000000000000000000;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv64_400921FB54442D18 = 64'b100000000001001001000011111101101010100010001000010110100011000;
parameter    ap_const_lv64_C00921FB54442D18 = 64'b1100000000001001001000011111101101010100010001000010110100011000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv12_433 = 12'b10000110011;
parameter    ap_const_lv12_1D = 12'b11101;
parameter    ap_const_lv12_FE3 = 12'b111111100011;
parameter    ap_const_lv12_36 = 12'b110110;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv33_1 = 33'b1;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv34_1 = 34'b1;
parameter    ap_const_lv6_1F = 6'b11111;
parameter    ap_const_lv34_3 = 34'b11;
parameter    ap_const_lv34_0 = 34'b0000000000000000000000000000000000;
parameter    ap_const_lv29_0 = 29'b00000000000000000000000000000;
parameter    ap_const_lv33_0 = 33'b000000000000000000000000000000000;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv8_E3 = 8'b11100011;
parameter    ap_const_lv11_7E3 = 11'b11111100011;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_36F0255E = 32'b110110111100000010010101011110;
parameter    ap_const_lv32_C90FDAA2 = 32'b11001001000011111101101010100010;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_68 = 32'b1101000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_F = 32'b1111;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] input_V_TDATA;
input   input_V_TVALID;
output   input_V_TREADY;
output  [31:0] output_V_TDATA;
output   output_V_TVALID;
input   output_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [107:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] input_V_0_data_out;
wire    input_V_0_vld_in;
wire    input_V_0_vld_out;
wire    input_V_0_ack_in;
reg    input_V_0_ack_out;
reg   [31:0] input_V_0_payload_A;
reg   [31:0] input_V_0_payload_B;
reg    input_V_0_sel_rd;
reg    input_V_0_sel_wr;
wire    input_V_0_sel;
wire    input_V_0_load_A;
wire    input_V_0_load_B;
reg   [1:0] input_V_0_state;
wire    input_V_0_state_cmp_full;
reg   [31:0] output_V_1_data_in;
reg   [31:0] output_V_1_data_out;
reg    output_V_1_vld_in;
wire    output_V_1_vld_out;
wire    output_V_1_ack_in;
wire    output_V_1_ack_out;
reg   [31:0] output_V_1_payload_A;
reg   [31:0] output_V_1_payload_B;
reg    output_V_1_sel_rd;
reg    output_V_1_sel_wr;
wire    output_V_1_sel;
wire    output_V_1_load_A;
wire    output_V_1_load_B;
reg   [1:0] output_V_1_state;
wire    output_V_1_state_cmp_full;
reg   [1:0] x_V_address0;
reg    x_V_ce0;
reg    x_V_we0;
wire   [31:0] x_V_d0;
wire   [31:0] x_V_q0;
reg   [1:0] x_V_address1;
reg    x_V_ce1;
wire   [31:0] x_V_q1;
reg   [1:0] R_V_address0;
reg    R_V_ce0;
reg    R_V_we0;
wire   [31:0] R_V_d0;
wire   [31:0] R_V_q0;
reg   [1:0] Pf_V_address0;
reg    Pf_V_ce0;
reg    Pf_V_we0;
wire   [31:0] Pf_V_d0;
wire   [31:0] Pf_V_q0;
reg   [1:0] aux_V_address0;
reg    aux_V_ce0;
reg    aux_V_we0;
wire   [31:0] aux_V_q0;
reg   [1:0] Hf_V_address0;
reg    Hf_V_ce0;
reg    Hf_V_we0;
reg   [31:0] Hf_V_d0;
wire   [31:0] Hf_V_q0;
reg   [1:0] Sf_V_address0;
reg    Sf_V_ce0;
reg    Sf_V_we0;
wire   [31:0] Sf_V_q0;
reg   [2:0] Hv_V_address0;
reg    Hv_V_ce0;
reg    Hv_V_we0;
reg   [31:0] Hv_V_d0;
reg   [2:0] Hv_V_address1;
reg    Hv_V_ce1;
reg    Hv_V_we1;
reg   [31:0] Hv_V_d1;
reg    input_V_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] ap_CS_fsm_state11;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] ap_CS_fsm_state95;
reg    output_V_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_state24;
wire   [0:0] ap_CS_fsm_state25;
wire   [0:0] ap_CS_fsm_state36;
wire   [0:0] ap_CS_fsm_state37;
wire   [0:0] ap_CS_fsm_state88;
wire   [0:0] ap_CS_fsm_state89;
wire   [0:0] ap_CS_fsm_state90;
wire   [0:0] ap_CS_fsm_state91;
wire   [0:0] ap_CS_fsm_state92;
wire   [0:0] ap_CS_fsm_state107;
wire   [0:0] ap_CS_fsm_state108;
wire   [63:0] grp_fu_510_p1;
reg   [63:0] reg_513;
wire   [0:0] ap_CS_fsm_state29;
wire   [1:0] i_1_fu_523_p2;
reg   [1:0] i_1_reg_2946;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] isneg_fu_542_p3;
reg   [0:0] isneg_reg_2951;
wire   [53:0] man_V_2_fu_586_p3;
reg   [53:0] man_V_2_reg_2956;
wire   [0:0] tmp_2_fu_594_p2;
reg   [0:0] tmp_2_reg_2961;
wire   [0:0] tmp_5_fu_606_p2;
reg   [0:0] tmp_5_reg_2967;
wire   [11:0] sh_amt_fu_624_p3;
reg   [11:0] sh_amt_reg_2973;
wire   [0:0] tmp_9_fu_632_p2;
reg   [0:0] tmp_9_reg_2979;
wire   [31:0] tmp_17_fu_638_p1;
reg   [31:0] tmp_17_reg_2985;
reg   [6:0] tmp_22_reg_2991;
wire   [1:0] j_1_fu_811_p2;
reg   [1:0] j_1_reg_2999;
wire   [0:0] ap_CS_fsm_state5;
wire   [3:0] tmp_66_cast_fu_825_p1;
reg   [3:0] tmp_66_cast_reg_3004;
wire   [0:0] exitcond2_fu_805_p2;
wire   [1:0] k_1_fu_835_p2;
reg   [1:0] k_1_reg_3018;
wire   [0:0] ap_CS_fsm_state6;
wire   [3:0] tmp_62_fu_845_p2;
reg   [3:0] tmp_62_reg_3023;
wire   [0:0] exitcond3_fu_829_p2;
wire   [0:0] isneg_3_fu_863_p3;
reg   [0:0] isneg_3_reg_3028;
wire   [53:0] man_V_8_fu_907_p3;
reg   [53:0] man_V_8_reg_3033;
wire   [0:0] tmp_27_fu_915_p2;
reg   [0:0] tmp_27_reg_3038;
wire   [0:0] tmp_38_fu_927_p2;
reg   [0:0] tmp_38_reg_3044;
wire   [11:0] sh_amt_2_fu_945_p3;
reg   [11:0] sh_amt_2_reg_3050;
wire   [0:0] tmp_41_fu_953_p2;
reg   [0:0] tmp_41_reg_3056;
wire   [31:0] tmp_107_fu_959_p1;
reg   [31:0] tmp_107_reg_3062;
reg   [6:0] tmp_108_reg_3068;
reg   [31:0] tmp_149_reg_3073;
wire   [30:0] i_2_fu_1134_p2;
reg   [30:0] i_2_reg_3081;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] tmp_13_fu_1129_p2;
reg   [31:0] tmp_33_reg_3086;
reg   [0:0] isneg_1_reg_3091;
wire   [51:0] tmp_43_fu_1174_p1;
reg   [51:0] tmp_43_reg_3097;
wire   [0:0] tmp_20_fu_1178_p2;
reg   [0:0] tmp_20_reg_3102;
wire   [0:0] tmp_21_fu_1190_p2;
reg   [0:0] tmp_21_reg_3108;
wire   [11:0] sh_amt_1_fu_1208_p3;
reg   [11:0] sh_amt_1_reg_3114;
wire   [0:0] tmp_28_fu_1216_p2;
reg   [0:0] tmp_28_reg_3120;
reg   [6:0] tmp_53_reg_3126;
reg   [0:0] isneg_2_reg_3131;
wire   [51:0] tmp_72_fu_1267_p1;
reg   [51:0] tmp_72_reg_3137;
wire   [0:0] tmp_37_fu_1271_p2;
reg   [0:0] tmp_37_reg_3142;
wire   [0:0] tmp_42_fu_1283_p2;
reg   [0:0] tmp_42_reg_3148;
wire   [11:0] sh_amt_3_fu_1301_p3;
reg   [11:0] sh_amt_3_reg_3154;
wire   [0:0] tmp_46_fu_1309_p2;
reg   [0:0] tmp_46_reg_3160;
reg   [6:0] tmp_78_reg_3166;
wire   [31:0] newSel6_fu_1481_p3;
reg   [31:0] newSel6_reg_3171;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] or_cond5_fu_1489_p2;
reg   [0:0] or_cond5_reg_3176;
wire   [31:0] newSel7_fu_1651_p3;
reg   [31:0] newSel7_reg_3181;
wire   [0:0] or_cond8_fu_1659_p2;
reg   [0:0] or_cond8_reg_3186;
wire   [31:0] p_Val2_8_fu_1671_p2;
reg   [31:0] p_Val2_8_reg_3191;
wire   [0:0] ap_CS_fsm_state14;
wire   [31:0] p_Val2_7_fu_1683_p2;
reg   [31:0] p_Val2_7_reg_3198;
wire  signed [60:0] tmp_59_fu_1689_p1;
wire   [0:0] ap_CS_fsm_state15;
wire  signed [60:0] tmp_61_fu_1692_p1;
wire   [60:0] grp_fu_1695_p2;
reg   [60:0] tmp_77_cast_reg_3218;
wire   [0:0] ap_CS_fsm_state17;
wire   [60:0] grp_fu_1701_p2;
reg   [60:0] tmp_78_cast_reg_3223;
wire   [31:0] d2_V_fu_1711_p4;
reg   [31:0] d2_V_reg_3228;
wire   [0:0] ap_CS_fsm_state18;
wire   [33:0] s_V_fu_1741_p1;
wire   [5:0] i_3_fu_1751_p2;
wire   [0:0] ap_CS_fsm_state19;
wire   [33:0] p_0364_1_i_fu_1833_p3;
wire   [0:0] exitcond_i_fu_1745_p2;
wire   [31:0] q_star_V_fu_1857_p3;
wire   [31:0] q_V_1_fu_1865_p2;
wire   [30:0] p_v_fu_1907_p3;
reg   [30:0] p_v_reg_3267;
wire   [0:0] tmp_66_fu_1915_p2;
reg   [0:0] tmp_66_reg_3272;
reg   [11:0] tmp_68_reg_3277;
reg   [11:0] tmp_69_reg_3282;
wire   [60:0] tmp_83_fu_1941_p3;
wire   [60:0] tmp_84_fu_1948_p1;
wire   [0:0] ap_CS_fsm_state20;
wire    grp_cordic_atan2_fu_463_ap_done;
wire   [31:0] p_Val2_17_fu_2022_p2;
reg   [31:0] p_Val2_17_reg_3324;
wire   [0:0] sel_tmp36_fu_2028_p2;
reg   [0:0] sel_tmp36_reg_3331;
wire   [31:0] p_Result_4_fu_2059_p5;
reg   [31:0] p_Result_4_reg_3336;
wire   [0:0] ap_CS_fsm_state23;
wire   [31:0] tmp_67_fu_2071_p3;
wire   [31:0] p_Val2_19_fu_2153_p3;
reg   [31:0] p_Val2_19_reg_3346;
wire   [31:0] ang_V_assign_4_fu_2241_p3;
reg   [31:0] ang_V_assign_4_reg_3354;
wire   [0:0] ap_CS_fsm_state30;
wire   [0:0] tmp_80_fu_2248_p2;
reg   [0:0] tmp_80_reg_3360;
wire   [0:0] ap_CS_fsm_state31;
wire   [31:0] p_Result_7_fu_2273_p5;
reg   [31:0] p_Result_7_reg_3365;
wire   [0:0] ap_CS_fsm_state35;
wire   [31:0] tmp_81_fu_2285_p3;
wire   [31:0] p_Val2_29_fu_2292_p1;
reg   [31:0] p_Val2_29_reg_3375;
wire   [0:0] ap_CS_fsm_state83;
wire   [0:0] tmp_85_fu_2296_p2;
reg   [0:0] tmp_85_reg_3382;
wire   [31:0] grp_fu_1965_p2;
reg   [31:0] p_Val2_15_reg_3387;
wire   [31:0] grp_fu_2000_p2;
reg   [31:0] p_Val2_26_reg_3392;
wire   [31:0] p_Val2_30_fu_2302_p1;
reg   [31:0] p_Val2_30_reg_3397;
wire   [0:0] ap_CS_fsm_state84;
wire   [0:0] tmp_89_fu_2305_p2;
reg   [0:0] tmp_89_reg_3404;
wire   [31:0] grp_fu_1991_p2;
reg   [31:0] p_Val2_23_reg_3409;
wire   [31:0] p_Val2_32_fu_2317_p1;
reg   [31:0] p_Val2_32_reg_3414;
wire   [0:0] ap_CS_fsm_state85;
wire   [0:0] tmp_95_fu_2320_p2;
reg   [0:0] tmp_95_reg_3421;
wire   [31:0] p_Val2_35_fu_2332_p1;
reg   [31:0] p_Val2_35_reg_3426;
wire   [0:0] ap_CS_fsm_state86;
wire   [0:0] tmp_98_fu_2335_p2;
reg   [0:0] tmp_98_reg_3433;
wire   [31:0] p_Result_8_fu_2367_p5;
reg   [31:0] p_Result_8_reg_3438;
wire   [0:0] ap_CS_fsm_state87;
wire   [31:0] tmp_86_fu_2385_p3;
wire   [31:0] p_Result_9_fu_2412_p5;
reg   [31:0] p_Result_9_reg_3448;
wire   [31:0] tmp_90_fu_2424_p3;
wire   [31:0] p_Result_10_fu_2451_p5;
reg   [31:0] p_Result_10_reg_3458;
wire   [31:0] tmp_96_fu_2463_p3;
wire   [31:0] p_Result_11_fu_2490_p5;
reg   [31:0] p_Result_11_reg_3468;
wire   [31:0] tmp_99_fu_2502_p3;
wire   [1:0] j_2_fu_2515_p2;
reg   [1:0] j_2_reg_3481;
wire   [0:0] ap_CS_fsm_state93;
wire   [3:0] tmp_113_cast_fu_2529_p1;
reg   [3:0] tmp_113_cast_reg_3486;
wire   [0:0] exitcond4_fu_2509_p2;
wire   [1:0] k_3_fu_2539_p2;
reg   [1:0] k_3_reg_3494;
wire   [0:0] ap_CS_fsm_state94;
wire   [3:0] tmp_102_fu_2549_p2;
reg   [3:0] tmp_102_reg_3499;
wire   [0:0] exitcond6_fu_2533_p2;
wire   [0:0] isneg_4_fu_2567_p3;
reg   [0:0] isneg_4_reg_3504;
wire   [53:0] man_V_14_fu_2611_p3;
reg   [53:0] man_V_14_reg_3509;
wire   [0:0] tmp_106_fu_2619_p2;
reg   [0:0] tmp_106_reg_3514;
wire   [0:0] tmp_112_fu_2631_p2;
reg   [0:0] tmp_112_reg_3520;
wire   [11:0] sh_amt_4_fu_2649_p3;
reg   [11:0] sh_amt_4_reg_3526;
wire   [0:0] tmp_116_fu_2657_p2;
reg   [0:0] tmp_116_reg_3532;
wire   [31:0] tmp_146_fu_2663_p1;
reg   [31:0] tmp_146_reg_3538;
reg   [6:0] tmp_147_reg_3544;
wire   [1:0] j_3_fu_2835_p2;
reg   [1:0] j_3_reg_3552;
wire   [0:0] ap_CS_fsm_state100;
wire   [3:0] tmp_138_cast_fu_2849_p1;
reg   [3:0] tmp_138_cast_reg_3557;
wire   [0:0] exitcond5_fu_2829_p2;
wire   [1:0] k_2_fu_2859_p2;
reg   [1:0] k_2_reg_3565;
wire   [0:0] ap_CS_fsm_state101;
wire   [0:0] exitcond_fu_2853_p2;
wire   [32:0] tmp_124_fu_2888_p2;
reg   [32:0] tmp_124_reg_3580;
wire   [0:0] ap_CS_fsm_state102;
wire   [0:0] tmp_125_fu_2894_p2;
reg   [0:0] tmp_125_reg_3585;
wire  signed [63:0] dp_11_fu_2900_p1;
wire   [0:0] ap_CS_fsm_state103;
wire   [31:0] grp_fu_495_p1;
reg   [31:0] dp_10_reg_3595;
wire   [0:0] ap_CS_fsm_state106;
wire   [31:0] tmp_126_fu_2935_p3;
wire    grp_cordic_atan2_fu_463_ap_start;
wire    grp_cordic_atan2_fu_463_ap_idle;
wire    grp_cordic_atan2_fu_463_ap_ready;
wire   [15:0] grp_cordic_atan2_fu_463_ap_return;
wire    grp_matrix_multiply_defa_fu_472_ap_start;
wire    grp_matrix_multiply_defa_fu_472_ap_done;
wire    grp_matrix_multiply_defa_fu_472_ap_idle;
wire    grp_matrix_multiply_defa_fu_472_ap_ready;
wire   [1:0] grp_matrix_multiply_defa_fu_472_A_V_address0;
wire    grp_matrix_multiply_defa_fu_472_A_V_ce0;
wire   [1:0] grp_matrix_multiply_defa_fu_472_B_V_address0;
wire    grp_matrix_multiply_defa_fu_472_B_V_ce0;
wire   [1:0] grp_matrix_multiply_defa_fu_472_aux_V_address0;
wire    grp_matrix_multiply_defa_fu_472_aux_V_ce0;
wire    grp_matrix_multiply_defa_fu_472_aux_V_we0;
wire   [31:0] grp_matrix_multiply_defa_fu_472_aux_V_d0;
wire    grp_matrix_multiply_defa_1_fu_482_ap_start;
wire    grp_matrix_multiply_defa_1_fu_482_ap_done;
wire    grp_matrix_multiply_defa_1_fu_482_ap_idle;
wire    grp_matrix_multiply_defa_1_fu_482_ap_ready;
wire   [1:0] grp_matrix_multiply_defa_1_fu_482_B_V_address0;
wire    grp_matrix_multiply_defa_1_fu_482_B_V_ce0;
wire   [1:0] grp_matrix_multiply_defa_1_fu_482_C_V_address0;
wire    grp_matrix_multiply_defa_1_fu_482_C_V_ce0;
wire    grp_matrix_multiply_defa_1_fu_482_C_V_we0;
wire   [31:0] grp_matrix_multiply_defa_1_fu_482_C_V_d0;
wire   [1:0] grp_matrix_multiply_defa_1_fu_482_aux_V_address0;
wire    grp_matrix_multiply_defa_1_fu_482_aux_V_ce0;
reg   [1:0] i_reg_332;
wire   [0:0] ap_CS_fsm_state4;
reg   [1:0] j_reg_344;
wire   [0:0] exitcond1_fu_517_p2;
reg   [1:0] k_reg_355;
wire   [0:0] ap_CS_fsm_state8;
reg   [30:0] i1_reg_366;
reg   [31:0] p_i_reg_377;
reg   [31:0] p_1_i_reg_388;
reg   [33:0] p_2_i_reg_399;
reg   [5:0] i_i_reg_408;
reg   [1:0] j2_reg_419;
reg   [1:0] k3_reg_430;
wire   [0:0] ap_CS_fsm_state96;
reg   [1:0] j4_reg_441;
wire   [0:0] ap_CS_fsm_state99;
reg   [1:0] k5_reg_452;
reg    ap_reg_grp_cordic_atan2_fu_463_ap_start;
reg    ap_reg_grp_matrix_multiply_defa_fu_472_ap_start;
wire   [0:0] ap_CS_fsm_state97;
reg    ap_reg_grp_matrix_multiply_defa_1_fu_482_ap_start;
wire   [0:0] ap_CS_fsm_state98;
wire   [63:0] tmp_1_fu_652_p1;
wire   [63:0] tmp_68_cast_fu_973_p1;
wire   [63:0] tmp_139_cast_fu_2677_p1;
wire   [63:0] tmp_140_cast_fu_2874_p1;
reg   [15:0] zn_V_read_assign_fu_230;
wire   [31:0] p_Val2_s_fu_2311_p2;
wire   [31:0] p_Val2_31_fu_2326_p2;
wire   [31:0] p_Val2_33_fu_2341_p2;
wire   [31:0] p_Val2_34_fu_2379_p2;
wire   [31:0] grp_fu_492_p0;
reg   [63:0] grp_fu_495_p0;
wire   [0:0] ap_CS_fsm_state32;
reg   [31:0] grp_fu_498_p0;
wire   [31:0] v_assign_fu_529_p1;
wire   [31:0] v_assign_2_fu_850_p1;
wire   [31:0] v_assign_1_fu_1140_p1;
wire   [31:0] v_assign_4_fu_2554_p1;
wire   [31:0] d_assign_3_fu_501_p0;
reg   [63:0] grp_fu_504_p0;
wire   [63:0] dp_fu_2110_p1;
wire   [63:0] dp_2_fu_2192_p1;
reg   [63:0] grp_fu_504_p1;
reg   [31:0] grp_fu_510_p0;
wire   [0:0] ap_CS_fsm_state21;
wire   [0:0] ap_CS_fsm_state26;
wire   [63:0] grp_fu_498_p1;
wire   [63:0] ireg_V_fu_534_p1;
wire   [10:0] exp_tmp_V_fu_550_p4;
wire   [51:0] tmp_15_fu_564_p1;
wire   [52:0] tmp_4_fu_568_p3;
wire   [53:0] p_Result_s_fu_576_p1;
wire   [53:0] man_V_1_fu_580_p2;
wire   [62:0] tmp_10_fu_538_p1;
wire   [11:0] tmp_6_fu_560_p1;
wire   [11:0] F2_fu_600_p2;
wire   [11:0] tmp_7_fu_612_p2;
wire   [11:0] tmp_8_fu_618_p2;
wire  signed [31:0] sh_amt_cast_fu_657_p1;
wire   [53:0] tmp_s_fu_670_p1;
wire   [53:0] tmp_11_fu_674_p2;
wire   [0:0] sel_tmp1_fu_695_p2;
wire   [0:0] sel_tmp6_demorgan_fu_705_p2;
wire   [0:0] sel_tmp6_fu_709_p2;
wire   [0:0] tmp_3_fu_660_p2;
wire   [0:0] sel_tmp7_fu_715_p2;
wire   [0:0] sel_tmp8_fu_720_p2;
wire   [0:0] sel_tmp21_demorgan_fu_738_p2;
wire   [0:0] icmp_fu_665_p2;
wire   [0:0] sel_tmp3_fu_743_p2;
wire   [0:0] sel_tmp4_fu_749_p2;
wire   [31:0] tmp_12_fu_690_p2;
wire   [31:0] tmp_23_fu_679_p1;
wire   [0:0] sel_tmp_fu_732_p2;
wire   [0:0] sel_tmp9_fu_726_p2;
wire   [31:0] storemerge_fu_683_p3;
wire   [0:0] sel_tmp2_fu_700_p2;
wire   [0:0] or_cond_fu_763_p2;
wire   [31:0] newSel_fu_755_p3;
wire   [31:0] newSel1_fu_769_p3;
wire   [0:0] or_cond1_fu_776_p2;
wire   [0:0] or_cond2_fu_790_p2;
wire   [31:0] newSel2_fu_782_p3;
wire   [2:0] tmp_14_fu_817_p3;
wire   [3:0] tmp_23_cast_fu_841_p1;
wire   [63:0] ireg_V_1_fu_855_p1;
wire   [10:0] exp_tmp_V_2_fu_871_p4;
wire   [51:0] tmp_103_fu_885_p1;
wire   [52:0] tmp_58_fu_889_p3;
wire   [53:0] p_Result_1_fu_897_p1;
wire   [53:0] man_V_7_fu_901_p2;
wire   [62:0] tmp_93_fu_859_p1;
wire   [11:0] tmp_25_fu_881_p1;
wire   [11:0] F2_2_fu_921_p2;
wire   [11:0] tmp_39_fu_933_p2;
wire   [11:0] tmp_40_fu_939_p2;
wire  signed [31:0] sh_amt_2_cast_fu_977_p1;
wire   [53:0] tmp_54_fu_990_p1;
wire   [53:0] tmp_55_fu_994_p2;
wire   [0:0] sel_tmp26_fu_1015_p2;
wire   [0:0] sel_tmp31_demorgan_fu_1025_p2;
wire   [0:0] sel_tmp29_fu_1029_p2;
wire   [0:0] tmp_47_fu_980_p2;
wire   [0:0] sel_tmp30_fu_1035_p2;
wire   [0:0] sel_tmp31_fu_1040_p2;
wire   [0:0] sel_tmp46_demorgan_fu_1058_p2;
wire   [0:0] icmp3_fu_985_p2;
wire   [0:0] sel_tmp34_fu_1063_p2;
wire   [0:0] sel_tmp35_fu_1069_p2;
wire   [31:0] tmp_57_fu_1010_p2;
wire   [31:0] tmp_109_fu_999_p1;
wire   [0:0] sel_tmp33_fu_1052_p2;
wire   [0:0] sel_tmp32_fu_1046_p2;
wire   [31:0] storemerge2_fu_1003_p3;
wire   [0:0] sel_tmp27_fu_1020_p2;
wire   [0:0] or_cond9_fu_1083_p2;
wire   [31:0] newSel10_fu_1075_p3;
wire   [31:0] newSel11_fu_1089_p3;
wire   [0:0] or_cond10_fu_1096_p2;
wire   [0:0] or_cond11_fu_1110_p2;
wire   [31:0] newSel12_fu_1102_p3;
wire   [31:0] i1_cast_fu_1125_p1;
wire   [63:0] ireg_V_2_fu_1144_p1;
wire   [10:0] exp_tmp_V_1_fu_1160_p4;
wire   [62:0] tmp_36_fu_1148_p1;
wire   [11:0] tmp_18_fu_1170_p1;
wire   [11:0] F2_1_fu_1184_p2;
wire   [11:0] tmp_24_fu_1196_p2;
wire   [11:0] tmp_26_fu_1202_p2;
wire   [63:0] d_assign_3_fu_501_p1;
wire   [63:0] ireg_V_3_fu_1237_p1;
wire   [10:0] exp_tmp_V_3_fu_1253_p4;
wire   [62:0] tmp_63_fu_1241_p1;
wire   [11:0] tmp_34_fu_1263_p1;
wire   [11:0] F2_3_fu_1277_p2;
wire   [11:0] tmp_44_fu_1289_p2;
wire   [11:0] tmp_45_fu_1295_p2;
wire   [52:0] tmp_19_fu_1325_p3;
wire   [53:0] p_Result_2_fu_1332_p1;
wire   [53:0] man_V_4_fu_1336_p2;
wire   [53:0] man_V_5_fu_1342_p3;
wire  signed [31:0] sh_amt_1_cast_fu_1349_p1;
wire   [53:0] tmp_30_fu_1366_p1;
wire   [53:0] tmp_31_fu_1370_p2;
wire   [31:0] tmp_49_fu_1352_p1;
wire   [0:0] sel_tmp5_fu_1393_p2;
wire   [0:0] sel_tmp86_demorgan_fu_1403_p2;
wire   [0:0] sel_tmp11_fu_1407_p2;
wire   [0:0] sel_tmp12_fu_1413_p2;
wire   [0:0] tmp_29_fu_1356_p2;
wire   [0:0] sel_tmp14_fu_1424_p2;
wire   [0:0] sel_tmp101_demorgan_fu_1436_p2;
wire   [0:0] icmp1_fu_1361_p2;
wire   [0:0] sel_tmp16_fu_1441_p2;
wire   [0:0] sel_tmp17_fu_1447_p2;
wire   [31:0] tmp_32_fu_1387_p2;
wire   [31:0] this_assign_2_fu_1380_p3;
wire   [0:0] sel_tmp15_fu_1430_p2;
wire   [0:0] sel_tmp13_fu_1418_p2;
wire   [31:0] tmp_56_fu_1376_p1;
wire   [0:0] sel_tmp10_fu_1398_p2;
wire   [0:0] or_cond3_fu_1461_p2;
wire   [31:0] newSel4_fu_1453_p3;
wire   [31:0] newSel5_fu_1467_p3;
wire   [0:0] or_cond4_fu_1475_p2;
wire   [52:0] tmp_35_fu_1495_p3;
wire   [53:0] p_Result_3_fu_1502_p1;
wire   [53:0] man_V_9_fu_1506_p2;
wire   [53:0] man_V_10_fu_1512_p3;
wire  signed [31:0] sh_amt_3_cast_fu_1519_p1;
wire   [53:0] tmp_50_fu_1536_p1;
wire   [53:0] tmp_51_fu_1540_p2;
wire   [31:0] tmp_76_fu_1522_p1;
wire   [0:0] sel_tmp18_fu_1563_p2;
wire   [0:0] sel_tmp110_demorgan_fu_1573_p2;
wire   [0:0] sel_tmp20_fu_1577_p2;
wire   [0:0] sel_tmp21_fu_1583_p2;
wire   [0:0] tmp_48_fu_1526_p2;
wire   [0:0] sel_tmp23_fu_1594_p2;
wire   [0:0] sel_tmp125_demorgan_fu_1606_p2;
wire   [0:0] icmp2_fu_1531_p2;
wire   [0:0] sel_tmp25_fu_1611_p2;
wire   [0:0] sel_tmp28_fu_1617_p2;
wire   [31:0] tmp_52_fu_1557_p2;
wire   [31:0] this_assign_3_fu_1550_p3;
wire   [0:0] sel_tmp24_fu_1600_p2;
wire   [0:0] sel_tmp22_fu_1588_p2;
wire   [31:0] tmp_82_fu_1546_p1;
wire   [0:0] sel_tmp19_fu_1568_p2;
wire   [0:0] or_cond6_fu_1631_p2;
wire   [31:0] newSel8_fu_1623_p3;
wire   [31:0] newSel9_fu_1637_p3;
wire   [0:0] or_cond7_fu_1645_p2;
wire   [31:0] p_Val2_2_fu_1665_p3;
wire   [31:0] p_Val2_5_fu_1677_p3;
wire  signed [31:0] grp_fu_1695_p0;
wire  signed [31:0] grp_fu_1695_p1;
wire  signed [31:0] grp_fu_1701_p0;
wire  signed [31:0] grp_fu_1701_p1;
wire   [60:0] p_Val2_9_fu_1707_p2;
wire   [32:0] tmp_i_cast_fu_1721_p1;
wire   [32:0] tmp_i_fu_1725_p2;
wire   [31:0] val_assign_fu_1731_p4;
wire   [33:0] tmp_160_i_fu_1771_p3;
wire   [5:0] op2_assign_fu_1785_p2;
wire   [33:0] r_V_fu_1779_p2;
wire   [33:0] tmp_161_i_fu_1791_p1;
wire   [33:0] tmp_129_fu_1765_p2;
wire   [33:0] r_V_1_fu_1795_p2;
wire   [33:0] tmp_164_i_fu_1807_p3;
wire   [33:0] r_V_2_fu_1815_p2;
wire   [33:0] r_V_3_fu_1821_p2;
wire   [0:0] tmp_128_fu_1757_p3;
wire   [33:0] s_V_2_fu_1827_p2;
wire   [33:0] s_V_1_fu_1801_p2;
wire   [30:0] tmp_136_fu_1841_p1;
wire   [30:0] tmp_138_fu_1845_p1;
wire   [30:0] tmp_141_fu_1849_p3;
wire   [31:0] q_V_fu_1881_p2;
wire   [0:0] tmp_156_i_fu_1875_p2;
wire   [30:0] tmp_64_fu_1887_p4;
wire   [30:0] tmp_65_fu_1897_p4;
wire   [31:0] grp_fu_1952_p1;
wire   [60:0] grp_fu_1965_p0;
wire   [31:0] grp_fu_1965_p1;
wire  signed [32:0] tmp_91_fu_1971_p1;
wire   [32:0] p_Val2_21_fu_1974_p2;
wire   [61:0] grp_fu_1991_p0;
wire   [32:0] grp_fu_1991_p1;
wire   [32:0] grp_fu_2000_p1;
wire   [14:0] tmp_110_fu_2010_p1;
wire   [31:0] tmp_70_fu_2014_p3;
wire   [31:0] grp_fu_492_p1;
wire   [31:0] res_V_17_fu_2039_p1;
wire   [7:0] exp_V_fu_2043_p4;
wire   [7:0] exp_V_18_fu_2053_p2;
wire   [63:0] res_V_18_fu_2078_p1;
wire   [10:0] exp_V_2_fu_2082_p4;
wire   [10:0] exp_V_19_fu_2092_p2;
wire   [63:0] p_Result_5_fu_2098_p5;
wire   [51:0] tmp_111_fu_2115_p1;
wire   [0:0] notrhs_fu_2125_p2;
wire   [0:0] notlhs_fu_2119_p2;
wire   [0:0] tmp_71_fu_2131_p2;
wire   [0:0] grp_fu_504_p2;
wire   [0:0] tmp_74_fu_2137_p2;
wire   [0:0] sel_tmp37_fu_2148_p2;
wire   [31:0] ang_V_assign_fu_2143_p2;
wire   [63:0] res_V_fu_2160_p1;
wire   [10:0] exp_V_4_fu_2164_p4;
wire   [10:0] exp_V_20_fu_2174_p2;
wire   [63:0] p_Result_6_fu_2180_p5;
wire   [51:0] tmp_113_fu_2197_p1;
wire   [0:0] notrhs1_fu_2207_p2;
wire   [0:0] notlhs1_fu_2201_p2;
wire   [0:0] tmp_75_fu_2213_p2;
wire   [0:0] sel_tmp38_fu_2230_p2;
wire   [0:0] tmp_79_fu_2219_p2;
wire   [0:0] sel_tmp39_fu_2235_p2;
wire   [31:0] ang_V_assign_1_fu_2225_p2;
wire   [31:0] res_V_19_fu_2253_p1;
wire   [7:0] exp_V_6_fu_2257_p4;
wire   [7:0] exp_V_21_fu_2267_p2;
wire   [31:0] grp_fu_1952_p2;
wire   [31:0] res_V_20_fu_2347_p1;
wire   [7:0] exp_V_8_fu_2351_p4;
wire   [7:0] exp_V_22_fu_2361_p2;
wire   [31:0] res_V_21_fu_2392_p1;
wire   [7:0] exp_V_10_fu_2396_p4;
wire   [7:0] exp_V_23_fu_2406_p2;
wire   [31:0] res_V_22_fu_2431_p1;
wire   [7:0] exp_V_12_fu_2435_p4;
wire   [7:0] exp_V_24_fu_2445_p2;
wire   [31:0] res_V_23_fu_2470_p1;
wire   [7:0] exp_V_14_fu_2474_p4;
wire   [7:0] exp_V_25_fu_2484_p2;
wire   [2:0] tmp_100_fu_2521_p3;
wire   [3:0] tmp_115_cast_fu_2545_p1;
wire   [63:0] ireg_V_4_fu_2559_p1;
wire   [10:0] exp_tmp_V_4_fu_2575_p4;
wire   [51:0] tmp_145_fu_2589_p1;
wire   [52:0] tmp_105_fu_2593_p3;
wire   [53:0] p_Result_12_fu_2601_p1;
wire   [53:0] man_V_13_fu_2605_p2;
wire   [62:0] tmp_143_fu_2563_p1;
wire   [11:0] tmp_104_fu_2585_p1;
wire   [11:0] F2_4_fu_2625_p2;
wire   [11:0] tmp_114_fu_2637_p2;
wire   [11:0] tmp_115_fu_2643_p2;
wire  signed [31:0] sh_amt_4_cast_fu_2681_p1;
wire   [53:0] tmp_118_fu_2694_p1;
wire   [53:0] tmp_119_fu_2698_p2;
wire   [0:0] sel_tmp40_fu_2719_p2;
wire   [0:0] sel_tmp59_demorgan_fu_2729_p2;
wire   [0:0] sel_tmp42_fu_2733_p2;
wire   [0:0] tmp_117_fu_2684_p2;
wire   [0:0] sel_tmp43_fu_2739_p2;
wire   [0:0] sel_tmp44_fu_2744_p2;
wire   [0:0] sel_tmp74_demorgan_fu_2762_p2;
wire   [0:0] icmp4_fu_2689_p2;
wire   [0:0] sel_tmp47_fu_2767_p2;
wire   [0:0] sel_tmp48_fu_2773_p2;
wire   [31:0] tmp_120_fu_2714_p2;
wire   [31:0] tmp_148_fu_2703_p1;
wire   [0:0] sel_tmp46_fu_2756_p2;
wire   [0:0] sel_tmp45_fu_2750_p2;
wire   [31:0] storemerge4_fu_2707_p3;
wire   [0:0] sel_tmp41_fu_2724_p2;
wire   [0:0] or_cond12_fu_2787_p2;
wire   [31:0] newSel14_fu_2779_p3;
wire   [31:0] newSel15_fu_2793_p3;
wire   [0:0] or_cond13_fu_2800_p2;
wire   [0:0] or_cond14_fu_2814_p2;
wire   [31:0] newSel16_fu_2806_p3;
wire   [2:0] tmp_101_fu_2841_p3;
wire   [3:0] tmp_129_cast_fu_2865_p1;
wire   [3:0] tmp_121_fu_2869_p2;
wire  signed [32:0] tmp_123_fu_2884_p1;
wire  signed [32:0] tmp_122_fu_2880_p1;
wire   [31:0] res_V_24_fu_2904_p1;
wire   [7:0] exp_V_16_fu_2907_p4;
wire   [7:0] exp_V_26_fu_2917_p2;
wire   [31:0] p_Result_13_fu_2923_p5;
reg    grp_fu_492_ce;
wire   [0:0] ap_CS_fsm_state22;
reg    grp_fu_495_ce;
wire   [0:0] ap_CS_fsm_state33;
wire   [0:0] ap_CS_fsm_state34;
wire   [0:0] ap_CS_fsm_state104;
wire   [0:0] ap_CS_fsm_state105;
reg   [4:0] grp_fu_504_opcode;
reg    grp_fu_510_ce;
wire   [0:0] ap_CS_fsm_state27;
wire   [0:0] ap_CS_fsm_state28;
reg    grp_fu_1952_ap_start;
wire    grp_fu_1952_ap_done;
reg    grp_fu_1952_ce;
wire   [0:0] ap_CS_fsm_state16;
reg    grp_fu_1965_ap_start;
wire    grp_fu_1965_ap_done;
reg    grp_fu_1965_ce;
reg    grp_fu_1991_ap_start;
wire    grp_fu_1991_ap_done;
reg    grp_fu_1991_ce;
reg    grp_fu_2000_ap_start;
wire    grp_fu_2000_ap_done;
reg    grp_fu_2000_ce;
reg   [107:0] ap_NS_fsm;
wire   [61:0] grp_fu_1991_p10;
wire   [60:0] grp_fu_2000_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 108'b1;
#0 input_V_0_sel_rd = 1'b0;
#0 input_V_0_sel_wr = 1'b0;
#0 input_V_0_state = 2'b00;
#0 output_V_1_sel_rd = 1'b0;
#0 output_V_1_sel_wr = 1'b0;
#0 output_V_1_state = 2'b00;
#0 ap_reg_grp_cordic_atan2_fu_463_ap_start = 1'b0;
#0 ap_reg_grp_matrix_multiply_defa_fu_472_ap_start = 1'b0;
#0 ap_reg_grp_matrix_multiply_defa_1_fu_482_ap_start = 1'b0;
end

toplevel_x_V #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
x_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_V_address0),
    .ce0(x_V_ce0),
    .we0(x_V_we0),
    .d0(x_V_d0),
    .q0(x_V_q0),
    .address1(x_V_address1),
    .ce1(x_V_ce1),
    .q1(x_V_q1)
);

toplevel_R_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
R_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(R_V_address0),
    .ce0(R_V_ce0),
    .we0(R_V_we0),
    .d0(R_V_d0),
    .q0(R_V_q0)
);

toplevel_R_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
Pf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Pf_V_address0),
    .ce0(Pf_V_ce0),
    .we0(Pf_V_we0),
    .d0(Pf_V_d0),
    .q0(Pf_V_q0)
);

toplevel_R_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
aux_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(aux_V_address0),
    .ce0(aux_V_ce0),
    .we0(aux_V_we0),
    .d0(grp_matrix_multiply_defa_fu_472_aux_V_d0),
    .q0(aux_V_q0)
);

toplevel_R_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
Hf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Hf_V_address0),
    .ce0(Hf_V_ce0),
    .we0(Hf_V_we0),
    .d0(Hf_V_d0),
    .q0(Hf_V_q0)
);

toplevel_R_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
Sf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Sf_V_address0),
    .ce0(Sf_V_ce0),
    .we0(Sf_V_we0),
    .d0(grp_matrix_multiply_defa_1_fu_482_C_V_d0),
    .q0(Sf_V_q0)
);

toplevel_Hv_V #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
Hv_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Hv_V_address0),
    .ce0(Hv_V_ce0),
    .we0(Hv_V_we0),
    .d0(Hv_V_d0),
    .address1(Hv_V_address1),
    .ce1(Hv_V_ce1),
    .we1(Hv_V_we1),
    .d1(Hv_V_d1)
);

cordic_atan2 grp_cordic_atan2_fu_463(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_cordic_atan2_fu_463_ap_start),
    .ap_done(grp_cordic_atan2_fu_463_ap_done),
    .ap_idle(grp_cordic_atan2_fu_463_ap_idle),
    .ap_ready(grp_cordic_atan2_fu_463_ap_ready),
    .y0_V(tmp_68_reg_3277),
    .x0_V(tmp_69_reg_3282),
    .zn_V_read(zn_V_read_assign_fu_230),
    .ap_return(grp_cordic_atan2_fu_463_ap_return)
);

matrix_multiply_defa grp_matrix_multiply_defa_fu_472(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matrix_multiply_defa_fu_472_ap_start),
    .ap_done(grp_matrix_multiply_defa_fu_472_ap_done),
    .ap_idle(grp_matrix_multiply_defa_fu_472_ap_idle),
    .ap_ready(grp_matrix_multiply_defa_fu_472_ap_ready),
    .A_V_address0(grp_matrix_multiply_defa_fu_472_A_V_address0),
    .A_V_ce0(grp_matrix_multiply_defa_fu_472_A_V_ce0),
    .A_V_q0(Hf_V_q0),
    .B_V_address0(grp_matrix_multiply_defa_fu_472_B_V_address0),
    .B_V_ce0(grp_matrix_multiply_defa_fu_472_B_V_ce0),
    .B_V_q0(Pf_V_q0),
    .aux_V_address0(grp_matrix_multiply_defa_fu_472_aux_V_address0),
    .aux_V_ce0(grp_matrix_multiply_defa_fu_472_aux_V_ce0),
    .aux_V_we0(grp_matrix_multiply_defa_fu_472_aux_V_we0),
    .aux_V_d0(grp_matrix_multiply_defa_fu_472_aux_V_d0)
);

matrix_multiply_defa_1 grp_matrix_multiply_defa_1_fu_482(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matrix_multiply_defa_1_fu_482_ap_start),
    .ap_done(grp_matrix_multiply_defa_1_fu_482_ap_done),
    .ap_idle(grp_matrix_multiply_defa_1_fu_482_ap_idle),
    .ap_ready(grp_matrix_multiply_defa_1_fu_482_ap_ready),
    .B_V_address0(grp_matrix_multiply_defa_1_fu_482_B_V_address0),
    .B_V_ce0(grp_matrix_multiply_defa_1_fu_482_B_V_ce0),
    .B_V_q0(Pf_V_q0),
    .C_V_address0(grp_matrix_multiply_defa_1_fu_482_C_V_address0),
    .C_V_ce0(grp_matrix_multiply_defa_1_fu_482_C_V_ce0),
    .C_V_we0(grp_matrix_multiply_defa_1_fu_482_C_V_we0),
    .C_V_d0(grp_matrix_multiply_defa_1_fu_482_C_V_d0),
    .aux_V_address0(grp_matrix_multiply_defa_1_fu_482_aux_V_address0),
    .aux_V_ce0(grp_matrix_multiply_defa_1_fu_482_aux_V_ce0),
    .aux_V_q0(aux_V_q0)
);

toplevel_uitofp_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toplevel_uitofp_3dEe_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_492_p0),
    .ce(grp_fu_492_ce),
    .dout(grp_fu_492_p1)
);

toplevel_sitofp_6eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
toplevel_sitofp_6eOg_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_495_p0),
    .ce(grp_fu_495_ce),
    .dout(grp_fu_495_p1)
);

toplevel_fpext_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
toplevel_fpext_32fYi_U15(
    .din0(grp_fu_498_p0),
    .dout(grp_fu_498_p1)
);

toplevel_fpext_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
toplevel_fpext_32fYi_U16(
    .din0(d_assign_3_fu_501_p0),
    .dout(d_assign_3_fu_501_p1)
);

toplevel_dcmp_64ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
toplevel_dcmp_64ng8j_U17(
    .din0(grp_fu_504_p0),
    .din1(grp_fu_504_p1),
    .opcode(grp_fu_504_opcode),
    .dout(grp_fu_504_p2)
);

toplevel_sitodp_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
toplevel_sitodp_3hbi_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_510_p0),
    .ce(grp_fu_510_ce),
    .dout(grp_fu_510_p1)
);

toplevel_mul_32s_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
toplevel_mul_32s_ibs_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1695_p0),
    .din1(grp_fu_1695_p1),
    .ce(1'b1),
    .dout(grp_fu_1695_p2)
);

toplevel_mul_32s_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
toplevel_mul_32s_ibs_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1701_p0),
    .din1(grp_fu_1701_p1),
    .ce(1'b1),
    .dout(grp_fu_1701_p2)
);

toplevel_sdiv_61njbC #(
    .ID( 1 ),
    .NUM_STAGE( 65 ),
    .din0_WIDTH( 61 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toplevel_sdiv_61njbC_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1952_ap_start),
    .done(grp_fu_1952_ap_done),
    .din0(tmp_83_fu_1941_p3),
    .din1(grp_fu_1952_p1),
    .ce(grp_fu_1952_ce),
    .dout(grp_fu_1952_p2)
);

toplevel_sdiv_61njbC #(
    .ID( 1 ),
    .NUM_STAGE( 65 ),
    .din0_WIDTH( 61 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toplevel_sdiv_61njbC_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1965_ap_start),
    .done(grp_fu_1965_ap_done),
    .din0(grp_fu_1965_p0),
    .din1(grp_fu_1965_p1),
    .ce(grp_fu_1965_ce),
    .dout(grp_fu_1965_p2)
);

toplevel_sdiv_62nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 66 ),
    .din0_WIDTH( 62 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 32 ))
toplevel_sdiv_62nkbM_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1991_ap_start),
    .done(grp_fu_1991_ap_done),
    .din0(grp_fu_1991_p0),
    .din1(grp_fu_1991_p1),
    .ce(grp_fu_1991_ce),
    .dout(grp_fu_1991_p2)
);

toplevel_sdiv_61nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 65 ),
    .din0_WIDTH( 61 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 32 ))
toplevel_sdiv_61nlbW_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_2000_ap_start),
    .done(grp_fu_2000_ap_done),
    .din0(tmp_83_fu_1941_p3),
    .din1(grp_fu_2000_p1),
    .ce(grp_fu_2000_ce),
    .dout(grp_fu_2000_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_cordic_atan2_fu_463_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond_i_fu_1745_p2))) begin
            ap_reg_grp_cordic_atan2_fu_463_ap_start <= 1'b1;
        end else if ((1'b1 == grp_cordic_atan2_fu_463_ap_ready)) begin
            ap_reg_grp_cordic_atan2_fu_463_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_matrix_multiply_defa_1_fu_482_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state98)) begin
            ap_reg_grp_matrix_multiply_defa_1_fu_482_ap_start <= 1'b1;
        end else if ((1'b1 == grp_matrix_multiply_defa_1_fu_482_ap_ready)) begin
            ap_reg_grp_matrix_multiply_defa_1_fu_482_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_matrix_multiply_defa_fu_472_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state93) & ~(1'b0 == exitcond4_fu_2509_p2))) begin
            ap_reg_grp_matrix_multiply_defa_fu_472_ap_start <= 1'b1;
        end else if ((1'b1 == grp_matrix_multiply_defa_fu_472_ap_ready)) begin
            ap_reg_grp_matrix_multiply_defa_fu_472_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == input_V_0_ack_out) & (1'b1 == input_V_0_vld_out))) begin
            input_V_0_sel_rd <= ~input_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == input_V_0_vld_in) & (1'b1 == input_V_0_ack_in))) begin
            input_V_0_sel_wr <= ~input_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == input_V_0_vld_in) & (1'b1 == input_V_0_ack_out) & (input_V_0_state == ap_const_lv2_3)) | ((1'b0 == input_V_0_vld_in) & (input_V_0_state == ap_const_lv2_2)))) begin
            input_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == input_V_0_vld_in) & (1'b0 == input_V_0_ack_out) & (input_V_0_state == ap_const_lv2_3)) | ((1'b0 == input_V_0_ack_out) & (input_V_0_state == ap_const_lv2_1)))) begin
            input_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == input_V_0_vld_in) & (input_V_0_state == ap_const_lv2_2)) | ((1'b1 == input_V_0_ack_out) & (input_V_0_state == ap_const_lv2_1)) | ((input_V_0_state == ap_const_lv2_3) & ~((1'b1 == input_V_0_vld_in) & (1'b0 == input_V_0_ack_out)) & ~((1'b0 == input_V_0_vld_in) & (1'b1 == input_V_0_ack_out))))) begin
            input_V_0_state <= ap_const_lv2_3;
        end else begin
            input_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == output_V_1_ack_out) & (1'b1 == output_V_1_vld_out))) begin
            output_V_1_sel_rd <= ~output_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == output_V_1_vld_in) & (1'b1 == output_V_1_ack_in))) begin
            output_V_1_sel_wr <= ~output_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == output_V_1_vld_in) & (1'b1 == output_V_1_ack_out) & (ap_const_lv2_3 == output_V_1_state)) | ((1'b0 == output_V_1_vld_in) & (ap_const_lv2_2 == output_V_1_state)))) begin
            output_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == output_V_1_vld_in) & (1'b0 == output_V_1_ack_out) & (ap_const_lv2_3 == output_V_1_state)) | ((1'b0 == output_V_1_ack_out) & (ap_const_lv2_1 == output_V_1_state)))) begin
            output_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == output_V_1_vld_in) & (ap_const_lv2_2 == output_V_1_state)) | ((1'b1 == output_V_1_ack_out) & (ap_const_lv2_1 == output_V_1_state)) | ((ap_const_lv2_3 == output_V_1_state) & ~((1'b1 == output_V_1_vld_in) & (1'b0 == output_V_1_ack_out)) & ~((1'b0 == output_V_1_vld_in) & (1'b1 == output_V_1_ack_out))))) begin
            output_V_1_state <= ap_const_lv2_3;
        end else begin
            output_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state100) & ~(1'b0 == exitcond5_fu_2829_p2))) begin
        i1_reg_366 <= i_2_reg_3081;
    end else if (((1'b1 == ap_CS_fsm_state9) & ~(input_V_0_vld_out == 1'b0))) begin
        i1_reg_366 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond_i_fu_1745_p2))) begin
        i_i_reg_408 <= i_3_fu_1751_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_i_reg_408 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_332 <= i_1_reg_2946;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_332 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & ~(1'b0 == exitcond6_fu_2533_p2))) begin
        j2_reg_419 <= j_2_reg_3481;
    end else if (((1'b1 == ap_CS_fsm_state92) & ~(1'b0 == output_V_1_ack_in))) begin
        j2_reg_419 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & ~(1'b0 == exitcond_fu_2853_p2))) begin
        j4_reg_441 <= j_3_reg_3552;
    end else if (((1'b1 == ap_CS_fsm_state99) & ~(1'b0 == grp_matrix_multiply_defa_1_fu_482_ap_done))) begin
        j4_reg_441 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond1_fu_517_p2))) begin
        j_reg_344 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == exitcond3_fu_829_p2))) begin
        j_reg_344 <= j_1_reg_2999;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (1'b0 == exitcond4_fu_2509_p2))) begin
        k3_reg_430 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        k3_reg_430 <= k_3_reg_3494;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state100) & (1'b0 == exitcond5_fu_2829_p2))) begin
        k5_reg_452 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_CS_fsm_state108) & ~(1'b0 == output_V_1_ack_in))) begin
        k5_reg_452 <= k_2_reg_3565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == exitcond2_fu_805_p2))) begin
        k_reg_355 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_355 <= k_1_reg_3018;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond_i_fu_1745_p2))) begin
                p_1_i_reg_388[31 : 1] <= q_star_V_fu_1857_p3[31 : 1];
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
                p_1_i_reg_388[1] <= 1'b0;
        p_1_i_reg_388[2] <= 1'b0;
        p_1_i_reg_388[3] <= 1'b0;
        p_1_i_reg_388[4] <= 1'b0;
        p_1_i_reg_388[5] <= 1'b0;
        p_1_i_reg_388[6] <= 1'b0;
        p_1_i_reg_388[7] <= 1'b0;
        p_1_i_reg_388[8] <= 1'b0;
        p_1_i_reg_388[9] <= 1'b0;
        p_1_i_reg_388[10] <= 1'b0;
        p_1_i_reg_388[11] <= 1'b0;
        p_1_i_reg_388[12] <= 1'b0;
        p_1_i_reg_388[13] <= 1'b0;
        p_1_i_reg_388[14] <= 1'b0;
        p_1_i_reg_388[15] <= 1'b0;
        p_1_i_reg_388[16] <= 1'b0;
        p_1_i_reg_388[17] <= 1'b0;
        p_1_i_reg_388[18] <= 1'b0;
        p_1_i_reg_388[19] <= 1'b0;
        p_1_i_reg_388[20] <= 1'b0;
        p_1_i_reg_388[21] <= 1'b0;
        p_1_i_reg_388[22] <= 1'b0;
        p_1_i_reg_388[23] <= 1'b0;
        p_1_i_reg_388[24] <= 1'b0;
        p_1_i_reg_388[25] <= 1'b0;
        p_1_i_reg_388[26] <= 1'b0;
        p_1_i_reg_388[27] <= 1'b0;
        p_1_i_reg_388[28] <= 1'b0;
        p_1_i_reg_388[29] <= 1'b0;
        p_1_i_reg_388[30] <= 1'b0;
        p_1_i_reg_388[31] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond_i_fu_1745_p2))) begin
        p_2_i_reg_399 <= p_0364_1_i_fu_1833_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_2_i_reg_399 <= s_V_fu_1741_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond_i_fu_1745_p2))) begin
        p_i_reg_377 <= q_V_1_fu_1865_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_i_reg_377 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ang_V_assign_4_reg_3354 <= ang_V_assign_4_fu_2241_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        d2_V_reg_3228 <= {{p_Val2_9_fu_1707_p2[ap_const_lv32_3C : ap_const_lv32_1D]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_125_reg_3585) & (1'b1 == ap_CS_fsm_state106))) begin
        dp_10_reg_3595 <= grp_fu_495_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_2946 <= i_1_fu_523_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & ~(output_V_1_ack_in == 1'b0))) begin
        i_2_reg_3081 <= i_2_fu_1134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == input_V_0_load_A)) begin
        input_V_0_payload_A <= input_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == input_V_0_load_B)) begin
        input_V_0_payload_B <= input_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~(input_V_0_vld_out == 1'b0))) begin
        isneg_1_reg_3091 <= ireg_V_2_fu_1144_p1[ap_const_lv32_3F];
        isneg_2_reg_3131 <= ireg_V_3_fu_1237_p1[ap_const_lv32_3F];
        sh_amt_1_reg_3114 <= sh_amt_1_fu_1208_p3;
        sh_amt_3_reg_3154 <= sh_amt_3_fu_1301_p3;
        tmp_20_reg_3102 <= tmp_20_fu_1178_p2;
        tmp_21_reg_3108 <= tmp_21_fu_1190_p2;
        tmp_28_reg_3120 <= tmp_28_fu_1216_p2;
        tmp_37_reg_3142 <= tmp_37_fu_1271_p2;
        tmp_42_reg_3148 <= tmp_42_fu_1283_p2;
        tmp_43_reg_3097 <= tmp_43_fu_1174_p1;
        tmp_46_reg_3160 <= tmp_46_fu_1309_p2;
        tmp_53_reg_3126 <= {{sh_amt_1_fu_1208_p3[ap_const_lv32_B : ap_const_lv32_5]}};
        tmp_72_reg_3137 <= tmp_72_fu_1267_p1;
        tmp_78_reg_3166 <= {{sh_amt_3_fu_1301_p3[ap_const_lv32_B : ap_const_lv32_5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ~(input_V_0_vld_out == 1'b0))) begin
        isneg_3_reg_3028 <= ireg_V_1_fu_855_p1[ap_const_lv32_3F];
        man_V_8_reg_3033 <= man_V_8_fu_907_p3;
        sh_amt_2_reg_3050 <= sh_amt_2_fu_945_p3;
        tmp_107_reg_3062 <= tmp_107_fu_959_p1;
        tmp_108_reg_3068 <= {{sh_amt_2_fu_945_p3[ap_const_lv32_B : ap_const_lv32_5]}};
        tmp_27_reg_3038 <= tmp_27_fu_915_p2;
        tmp_38_reg_3044 <= tmp_38_fu_927_p2;
        tmp_41_reg_3056 <= tmp_41_fu_953_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state95) & ~(input_V_0_vld_out == 1'b0))) begin
        isneg_4_reg_3504 <= ireg_V_4_fu_2559_p1[ap_const_lv32_3F];
        man_V_14_reg_3509 <= man_V_14_fu_2611_p3;
        sh_amt_4_reg_3526 <= sh_amt_4_fu_2649_p3;
        tmp_106_reg_3514 <= tmp_106_fu_2619_p2;
        tmp_112_reg_3520 <= tmp_112_fu_2631_p2;
        tmp_116_reg_3532 <= tmp_116_fu_2657_p2;
        tmp_146_reg_3538 <= tmp_146_fu_2663_p1;
        tmp_147_reg_3544 <= {{sh_amt_4_fu_2649_p3[ap_const_lv32_B : ap_const_lv32_5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(input_V_0_vld_out == 1'b0))) begin
        isneg_reg_2951 <= ireg_V_fu_534_p1[ap_const_lv32_3F];
        man_V_2_reg_2956 <= man_V_2_fu_586_p3;
        sh_amt_reg_2973 <= sh_amt_fu_624_p3;
        tmp_17_reg_2985 <= tmp_17_fu_638_p1;
        tmp_22_reg_2991 <= {{sh_amt_fu_624_p3[ap_const_lv32_B : ap_const_lv32_5]}};
        tmp_2_reg_2961 <= tmp_2_fu_594_p2;
        tmp_5_reg_2967 <= tmp_5_fu_606_p2;
        tmp_9_reg_2979 <= tmp_9_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_1_reg_2999 <= j_1_fu_811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        j_2_reg_3481 <= j_2_fu_2515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        j_3_reg_3552 <= j_3_fu_2835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k_1_reg_3018 <= k_1_fu_835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        k_2_reg_3565 <= k_2_fu_2859_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        k_3_reg_3494 <= k_3_fu_2539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        newSel6_reg_3171 <= newSel6_fu_1481_p3;
        newSel7_reg_3181 <= newSel7_fu_1651_p3;
        or_cond5_reg_3176 <= or_cond5_fu_1489_p2;
        or_cond8_reg_3186 <= or_cond8_fu_1659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == output_V_1_load_A)) begin
        output_V_1_payload_A <= output_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == output_V_1_load_B)) begin
        output_V_1_payload_B <= output_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) & ~(1'b0 == output_V_1_ack_in) & (1'b0 == tmp_95_reg_3421))) begin
        p_Result_10_reg_3458 <= p_Result_10_fu_2451_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & ~(1'b0 == output_V_1_ack_in) & (1'b0 == tmp_98_reg_3433))) begin
        p_Result_11_reg_3468 <= p_Result_11_fu_2490_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_66_reg_3272) & (1'b1 == ap_CS_fsm_state23))) begin
        p_Result_4_reg_3336 <= p_Result_4_fu_2059_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (1'b0 == tmp_80_reg_3360))) begin
        p_Result_7_reg_3365 <= p_Result_7_fu_2273_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) & (1'b0 == tmp_85_reg_3382))) begin
        p_Result_8_reg_3438 <= p_Result_8_fu_2367_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & ~(1'b0 == output_V_1_ack_in) & (1'b0 == tmp_89_reg_3404))) begin
        p_Result_9_reg_3448 <= p_Result_9_fu_2412_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        p_Val2_15_reg_3387 <= grp_fu_1965_p2;
        p_Val2_26_reg_3392 <= grp_fu_2000_p2;
        p_Val2_29_reg_3375 <= p_Val2_29_fu_2292_p1;
        tmp_85_reg_3382 <= tmp_85_fu_2296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & ~(1'b0 == grp_cordic_atan2_fu_463_ap_done))) begin
        p_Val2_17_reg_3324 <= p_Val2_17_fu_2022_p2;
        sel_tmp36_reg_3331 <= sel_tmp36_fu_2028_p2;
        zn_V_read_assign_fu_230 <= grp_cordic_atan2_fu_463_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & ~(1'b0 == output_V_1_ack_in))) begin
        p_Val2_19_reg_3346 <= p_Val2_19_fu_2153_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        p_Val2_23_reg_3409 <= grp_fu_1991_p2;
        p_Val2_30_reg_3397 <= p_Val2_30_fu_2302_p1;
        tmp_89_reg_3404 <= tmp_89_fu_2305_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        p_Val2_32_reg_3414 <= p_Val2_32_fu_2317_p1;
        tmp_95_reg_3421 <= tmp_95_fu_2320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        p_Val2_35_reg_3426 <= p_Val2_35_fu_2332_p1;
        tmp_98_reg_3433 <= tmp_98_fu_2335_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_Val2_7_reg_3198 <= p_Val2_7_fu_1683_p2;
        p_Val2_8_reg_3191 <= p_Val2_8_fu_1671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond_i_fu_1745_p2))) begin
        p_v_reg_3267 <= p_v_fu_1907_p3;
        tmp_66_reg_3272 <= tmp_66_fu_1915_p2;
        tmp_68_reg_3277 <= {{p_Val2_7_reg_3198[ap_const_lv32_1F : ap_const_lv32_14]}};
        tmp_69_reg_3282 <= {{p_Val2_8_reg_3191[ap_const_lv32_1F : ap_const_lv32_14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state24) & ~(1'b0 == output_V_1_ack_in)) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_513 <= grp_fu_510_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & (1'b0 == exitcond6_fu_2533_p2))) begin
        tmp_102_reg_3499 <= tmp_102_fu_2549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (1'b0 == exitcond4_fu_2509_p2))) begin
        tmp_113_cast_reg_3486[2 : 1] <= tmp_113_cast_fu_2529_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        tmp_124_reg_3580 <= tmp_124_fu_2888_p2;
        tmp_125_reg_3585 <= tmp_125_fu_2894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state100) & (1'b0 == exitcond5_fu_2829_p2))) begin
        tmp_138_cast_reg_3557[2 : 1] <= tmp_138_cast_fu_2849_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(input_V_0_vld_out == 1'b0))) begin
        tmp_149_reg_3073 <= input_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(input_V_0_vld_out == 1'b0))) begin
        tmp_33_reg_3086 <= input_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond3_fu_829_p2))) begin
        tmp_62_reg_3023 <= tmp_62_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == exitcond2_fu_805_p2))) begin
        tmp_66_cast_reg_3004[2 : 1] <= tmp_66_cast_fu_825_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_77_cast_reg_3218 <= grp_fu_1695_p2;
        tmp_78_cast_reg_3223 <= grp_fu_1701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_80_reg_3360 <= tmp_80_fu_2248_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Hf_V_address0 = ap_const_lv2_3;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        Hf_V_address0 = ap_const_lv2_2;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        Hf_V_address0 = ap_const_lv2_1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Hf_V_address0 = ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Hf_V_address0 = grp_matrix_multiply_defa_fu_472_A_V_address0;
    end else begin
        Hf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87))) begin
        Hf_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Hf_V_ce0 = grp_matrix_multiply_defa_fu_472_A_V_ce0;
    end else begin
        Hf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Hf_V_d0 = p_Val2_35_reg_3426;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        Hf_V_d0 = p_Val2_32_reg_3414;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        Hf_V_d0 = p_Val2_30_reg_3397;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Hf_V_d0 = p_Val2_29_reg_3375;
    end else begin
        Hf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87))) begin
        Hf_V_we0 = 1'b1;
    end else begin
        Hf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        Hv_V_address0 = ap_const_lv3_3;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Hv_V_address0 = ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        Hv_V_address0 = ap_const_lv3_2;
    end else begin
        Hv_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Hv_V_address1 = ap_const_lv3_4;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        Hv_V_address1 = ap_const_lv3_1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Hv_V_address1 = ap_const_lv3_5;
    end else begin
        Hv_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state86))) begin
        Hv_V_ce0 = 1'b1;
    end else begin
        Hv_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state87))) begin
        Hv_V_ce1 = 1'b1;
    end else begin
        Hv_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        Hv_V_d0 = p_Val2_33_fu_2341_p2;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Hv_V_d0 = p_Val2_s_fu_2311_p2;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        Hv_V_d0 = ap_const_lv32_0;
    end else begin
        Hv_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Hv_V_d1 = p_Val2_34_fu_2379_p2;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        Hv_V_d1 = p_Val2_31_fu_2326_p2;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Hv_V_d1 = ap_const_lv32_E0000000;
    end else begin
        Hv_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state86))) begin
        Hv_V_we0 = 1'b1;
    end else begin
        Hv_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state87))) begin
        Hv_V_we1 = 1'b1;
    end else begin
        Hv_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        Pf_V_address0 = tmp_139_cast_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        Pf_V_address0 = grp_matrix_multiply_defa_1_fu_482_B_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Pf_V_address0 = grp_matrix_multiply_defa_fu_472_B_V_address0;
    end else begin
        Pf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        Pf_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        Pf_V_ce0 = grp_matrix_multiply_defa_1_fu_482_B_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Pf_V_ce0 = grp_matrix_multiply_defa_fu_472_B_V_ce0;
    end else begin
        Pf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        Pf_V_we0 = 1'b1;
    end else begin
        Pf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        R_V_address0 = tmp_140_cast_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        R_V_address0 = tmp_68_cast_fu_973_p1;
    end else begin
        R_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state8))) begin
        R_V_ce0 = 1'b1;
    end else begin
        R_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        R_V_we0 = 1'b1;
    end else begin
        R_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Sf_V_address0 = tmp_140_cast_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        Sf_V_address0 = grp_matrix_multiply_defa_1_fu_482_C_V_address0;
    end else begin
        Sf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Sf_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        Sf_V_ce0 = grp_matrix_multiply_defa_1_fu_482_C_V_ce0;
    end else begin
        Sf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Sf_V_we0 = grp_matrix_multiply_defa_1_fu_482_C_V_we0;
    end else begin
        Sf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_13_fu_1129_p2) & ~(output_V_1_ack_in == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_13_fu_1129_p2) & ~(output_V_1_ack_in == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        aux_V_address0 = grp_matrix_multiply_defa_1_fu_482_aux_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        aux_V_address0 = grp_matrix_multiply_defa_fu_472_aux_V_address0;
    end else begin
        aux_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        aux_V_ce0 = grp_matrix_multiply_defa_1_fu_482_aux_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        aux_V_ce0 = grp_matrix_multiply_defa_fu_472_aux_V_ce0;
    end else begin
        aux_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        aux_V_we0 = grp_matrix_multiply_defa_fu_472_aux_V_we0;
    end else begin
        aux_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond_i_fu_1745_p2))) begin
        grp_fu_1952_ap_start = 1'b1;
    end else begin
        grp_fu_1952_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1952_ce = 1'b0;
    end else begin
        grp_fu_1952_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond_i_fu_1745_p2))) begin
        grp_fu_1965_ap_start = 1'b1;
    end else begin
        grp_fu_1965_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1965_ce = 1'b0;
    end else begin
        grp_fu_1965_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond_i_fu_1745_p2))) begin
        grp_fu_1991_ap_start = 1'b1;
    end else begin
        grp_fu_1991_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1991_ce = 1'b0;
    end else begin
        grp_fu_1991_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond_i_fu_1745_p2))) begin
        grp_fu_2000_ap_start = 1'b1;
    end else begin
        grp_fu_2000_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2000_ce = 1'b0;
    end else begin
        grp_fu_2000_ce = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state20) & ~(1'b0 == grp_cordic_atan2_fu_463_ap_done)) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state87) | ((1'b1 == ap_CS_fsm_state88) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state89) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state90) & ~(1'b0 == output_V_1_ack_in)) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state105))) begin
        grp_fu_495_ce = 1'b1;
    end else begin
        grp_fu_495_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_495_p0 = dp_11_fu_2900_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_495_p0 = $signed(p_Val2_35_reg_3426);
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_495_p0 = $signed(p_Val2_32_reg_3414);
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_495_p0 = $signed(p_Val2_30_reg_3397);
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_495_p0 = $signed(p_Val2_29_reg_3375);
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_495_p0 = $signed(ang_V_assign_4_reg_3354);
    end else begin
        grp_fu_495_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_498_p0 = v_assign_4_fu_2554_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_498_p0 = v_assign_1_fu_1140_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_498_p0 = v_assign_2_fu_850_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_498_p0 = v_assign_fu_529_p1;
    end else begin
        grp_fu_498_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_504_opcode = ap_const_lv5_4;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_504_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_504_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_504_p0 = dp_2_fu_2192_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_504_p0 = dp_fu_2110_p1;
    end else begin
        grp_fu_504_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_504_p1 = ap_const_lv64_C00921FB54442D18;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_504_p1 = ap_const_lv64_400921FB54442D18;
    end else begin
        grp_fu_504_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & ~(1'b0 == output_V_1_ack_in)) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_510_ce = 1'b1;
    end else begin
        grp_fu_510_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_510_p0 = p_Val2_19_reg_3346;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_510_p0 = p_Val2_17_reg_3324;
    end else begin
        grp_fu_510_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & ~(input_V_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_state7) & ~(input_V_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_state9) & ~(input_V_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_state11) & ~(input_V_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_state12) & ~(input_V_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_state95) & ~(input_V_0_vld_out == 1'b0)))) begin
        input_V_0_ack_out = 1'b1;
    end else begin
        input_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == input_V_0_sel)) begin
        input_V_0_data_out = input_V_0_payload_B;
    end else begin
        input_V_0_data_out = input_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state95))) begin
        input_V_TDATA_blk_n = input_V_0_state[1'b0];
    end else begin
        input_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        output_V_1_data_in = tmp_126_fu_2935_p3;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        output_V_1_data_in = tmp_99_fu_2502_p3;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        output_V_1_data_in = tmp_96_fu_2463_p3;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        output_V_1_data_in = tmp_90_fu_2424_p3;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        output_V_1_data_in = tmp_86_fu_2385_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_V_1_data_in = tmp_81_fu_2285_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_V_1_data_in = tmp_67_fu_2071_p3;
    end else begin
        output_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == output_V_1_sel)) begin
        output_V_1_data_out = output_V_1_payload_B;
    end else begin
        output_V_1_data_out = output_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state36) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state88) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state89) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state90) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state91) & ~(1'b0 == output_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state107) & ~(1'b0 == output_V_1_ack_in)))) begin
        output_V_1_vld_in = 1'b1;
    end else begin
        output_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state108))) begin
        output_V_TDATA_blk_n = output_V_1_state[1'b1];
    end else begin
        output_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_V_address0 = ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_V_address0 = tmp_1_fu_652_p1;
    end else begin
        x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        x_V_address1 = ap_const_lv2_2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x_V_address1 = ap_const_lv2_1;
    end else begin
        x_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        x_V_ce0 = 1'b1;
    end else begin
        x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state19))) begin
        x_V_ce1 = 1'b1;
    end else begin
        x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_V_we0 = 1'b1;
    end else begin
        x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond1_fu_517_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(input_V_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if ((1'b0 == exitcond2_fu_805_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state6 : begin
            if (~(1'b0 == exitcond3_fu_829_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (~(input_V_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            if (~(input_V_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == tmp_13_fu_1129_p2) & ~(output_V_1_ack_in == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(output_V_1_ack_in == 1'b0) & ~(1'b0 == tmp_13_fu_1129_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (~(input_V_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (~(input_V_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if ((1'b0 == exitcond_i_fu_1745_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (~(1'b0 == grp_cordic_atan2_fu_463_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state90 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state92 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            if ((1'b0 == exitcond4_fu_2509_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state94 : begin
            if (~(1'b0 == exitcond6_fu_2533_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            if (~(input_V_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state97 : begin
            if (~(1'b0 == grp_matrix_multiply_defa_fu_472_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if (~(1'b0 == grp_matrix_multiply_defa_1_fu_482_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state100 : begin
            if (~(1'b0 == exitcond5_fu_2829_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state101 : begin
            if (~(1'b0 == exitcond_fu_2853_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state108 : begin
            if (~(1'b0 == output_V_1_ack_in)) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1184_p2 = (ap_const_lv12_433 - tmp_18_fu_1170_p1);

assign F2_2_fu_921_p2 = (ap_const_lv12_433 - tmp_25_fu_881_p1);

assign F2_3_fu_1277_p2 = (ap_const_lv12_433 - tmp_34_fu_1263_p1);

assign F2_4_fu_2625_p2 = (ap_const_lv12_433 - tmp_104_fu_2585_p1);

assign F2_fu_600_p2 = (ap_const_lv12_433 - tmp_6_fu_560_p1);

assign Pf_V_d0 = ((or_cond14_fu_2814_p2[0:0] === 1'b1) ? newSel16_fu_2806_p3 : ap_const_lv32_0);

assign R_V_d0 = ((or_cond11_fu_1110_p2[0:0] === 1'b1) ? newSel12_fu_1102_p3 : ap_const_lv32_0);

assign ang_V_assign_1_fu_2225_p2 = ($signed(ap_const_lv32_C90FDAA2) + $signed(p_Val2_19_reg_3346));

assign ang_V_assign_4_fu_2241_p3 = ((sel_tmp39_fu_2235_p2[0:0] === 1'b1) ? ang_V_assign_1_fu_2225_p2 : p_Val2_19_reg_3346);

assign ang_V_assign_fu_2143_p2 = (ap_const_lv32_36F0255E + p_Val2_17_reg_3324);

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state100 = ap_CS_fsm[ap_const_lv32_63];

assign ap_CS_fsm_state101 = ap_CS_fsm[ap_const_lv32_64];

assign ap_CS_fsm_state102 = ap_CS_fsm[ap_const_lv32_65];

assign ap_CS_fsm_state103 = ap_CS_fsm[ap_const_lv32_66];

assign ap_CS_fsm_state104 = ap_CS_fsm[ap_const_lv32_67];

assign ap_CS_fsm_state105 = ap_CS_fsm[ap_const_lv32_68];

assign ap_CS_fsm_state106 = ap_CS_fsm[ap_const_lv32_69];

assign ap_CS_fsm_state107 = ap_CS_fsm[ap_const_lv32_6A];

assign ap_CS_fsm_state108 = ap_CS_fsm[ap_const_lv32_6B];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_state23 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state30 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state31 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_state32 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state33 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state34 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state35 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_state36 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_state37 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state83 = ap_CS_fsm[ap_const_lv32_52];

assign ap_CS_fsm_state84 = ap_CS_fsm[ap_const_lv32_53];

assign ap_CS_fsm_state85 = ap_CS_fsm[ap_const_lv32_54];

assign ap_CS_fsm_state86 = ap_CS_fsm[ap_const_lv32_55];

assign ap_CS_fsm_state87 = ap_CS_fsm[ap_const_lv32_56];

assign ap_CS_fsm_state88 = ap_CS_fsm[ap_const_lv32_57];

assign ap_CS_fsm_state89 = ap_CS_fsm[ap_const_lv32_58];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state90 = ap_CS_fsm[ap_const_lv32_59];

assign ap_CS_fsm_state91 = ap_CS_fsm[ap_const_lv32_5A];

assign ap_CS_fsm_state92 = ap_CS_fsm[ap_const_lv32_5B];

assign ap_CS_fsm_state93 = ap_CS_fsm[ap_const_lv32_5C];

assign ap_CS_fsm_state94 = ap_CS_fsm[ap_const_lv32_5D];

assign ap_CS_fsm_state95 = ap_CS_fsm[ap_const_lv32_5E];

assign ap_CS_fsm_state96 = ap_CS_fsm[ap_const_lv32_5F];

assign ap_CS_fsm_state97 = ap_CS_fsm[ap_const_lv32_60];

assign ap_CS_fsm_state98 = ap_CS_fsm[ap_const_lv32_61];

assign ap_CS_fsm_state99 = ap_CS_fsm[ap_const_lv32_62];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign d2_V_fu_1711_p4 = {{p_Val2_9_fu_1707_p2[ap_const_lv32_3C : ap_const_lv32_1D]}};

assign d_assign_3_fu_501_p0 = input_V_0_data_out;

assign dp_11_fu_2900_p1 = $signed(tmp_124_reg_3580);

assign dp_2_fu_2192_p1 = p_Result_6_fu_2180_p5;

assign dp_fu_2110_p1 = p_Result_5_fu_2098_p5;

assign exitcond1_fu_517_p2 = ((i_reg_332 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond2_fu_805_p2 = ((j_reg_344 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond3_fu_829_p2 = ((k_reg_355 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond4_fu_2509_p2 = ((j2_reg_419 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond5_fu_2829_p2 = ((j4_reg_441 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond6_fu_2533_p2 = ((k3_reg_430 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond_fu_2853_p2 = ((k5_reg_452 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1745_p2 = ((i_i_reg_408 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exp_V_10_fu_2396_p4 = {{res_V_21_fu_2392_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_V_12_fu_2435_p4 = {{res_V_22_fu_2431_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_V_14_fu_2474_p4 = {{res_V_23_fu_2470_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_V_16_fu_2907_p4 = {{res_V_24_fu_2904_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_V_18_fu_2053_p2 = ($signed(ap_const_lv8_E3) + $signed(exp_V_fu_2043_p4));

assign exp_V_19_fu_2092_p2 = ($signed(ap_const_lv11_7E3) + $signed(exp_V_2_fu_2082_p4));

assign exp_V_20_fu_2174_p2 = ($signed(ap_const_lv11_7E3) + $signed(exp_V_4_fu_2164_p4));

assign exp_V_21_fu_2267_p2 = ($signed(ap_const_lv8_E3) + $signed(exp_V_6_fu_2257_p4));

assign exp_V_22_fu_2361_p2 = ($signed(ap_const_lv8_E3) + $signed(exp_V_8_fu_2351_p4));

assign exp_V_23_fu_2406_p2 = ($signed(ap_const_lv8_E3) + $signed(exp_V_10_fu_2396_p4));

assign exp_V_24_fu_2445_p2 = ($signed(ap_const_lv8_E3) + $signed(exp_V_12_fu_2435_p4));

assign exp_V_25_fu_2484_p2 = ($signed(ap_const_lv8_E3) + $signed(exp_V_14_fu_2474_p4));

assign exp_V_26_fu_2917_p2 = ($signed(exp_V_16_fu_2907_p4) + $signed(ap_const_lv8_E3));

assign exp_V_2_fu_2082_p4 = {{res_V_18_fu_2078_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign exp_V_4_fu_2164_p4 = {{res_V_fu_2160_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign exp_V_6_fu_2257_p4 = {{res_V_19_fu_2253_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_V_8_fu_2351_p4 = {{res_V_20_fu_2347_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_V_fu_2043_p4 = {{res_V_17_fu_2039_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign exp_tmp_V_1_fu_1160_p4 = {{ireg_V_2_fu_1144_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign exp_tmp_V_2_fu_871_p4 = {{ireg_V_1_fu_855_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign exp_tmp_V_3_fu_1253_p4 = {{ireg_V_3_fu_1237_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign exp_tmp_V_4_fu_2575_p4 = {{ireg_V_4_fu_2559_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign exp_tmp_V_fu_550_p4 = {{ireg_V_fu_534_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign grp_cordic_atan2_fu_463_ap_start = ap_reg_grp_cordic_atan2_fu_463_ap_start;

assign grp_fu_1695_p0 = tmp_59_fu_1689_p1;

assign grp_fu_1695_p1 = tmp_59_fu_1689_p1;

assign grp_fu_1701_p0 = tmp_61_fu_1692_p1;

assign grp_fu_1701_p1 = tmp_61_fu_1692_p1;

assign grp_fu_1952_p1 = tmp_84_fu_1948_p1;

assign grp_fu_1965_p0 = {{p_Val2_7_reg_3198}, {ap_const_lv29_0}};

assign grp_fu_1965_p1 = tmp_84_fu_1948_p1;

assign grp_fu_1991_p0 = {{p_Val2_21_fu_1974_p2}, {ap_const_lv29_0}};

assign grp_fu_1991_p1 = grp_fu_1991_p10;

assign grp_fu_1991_p10 = d2_V_reg_3228;

assign grp_fu_2000_p1 = grp_fu_2000_p10;

assign grp_fu_2000_p10 = d2_V_reg_3228;

assign grp_fu_492_p0 = p_v_reg_3267;

assign grp_matrix_multiply_defa_1_fu_482_ap_start = ap_reg_grp_matrix_multiply_defa_1_fu_482_ap_start;

assign grp_matrix_multiply_defa_fu_472_ap_start = ap_reg_grp_matrix_multiply_defa_fu_472_ap_start;

assign i1_cast_fu_1125_p1 = i1_reg_366;

assign i_1_fu_523_p2 = (i_reg_332 + ap_const_lv2_1);

assign i_2_fu_1134_p2 = (i1_reg_366 + ap_const_lv31_1);

assign i_3_fu_1751_p2 = (i_i_reg_408 + ap_const_lv6_1);

assign icmp1_fu_1361_p2 = ((tmp_53_reg_3126 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign icmp2_fu_1531_p2 = ((tmp_78_reg_3166 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign icmp3_fu_985_p2 = ((tmp_108_reg_3068 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign icmp4_fu_2689_p2 = ((tmp_147_reg_3544 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign icmp_fu_665_p2 = ((tmp_22_reg_2991 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign input_V_0_ack_in = input_V_0_state[1'b1];

assign input_V_0_load_A = (input_V_0_state_cmp_full & ~input_V_0_sel_wr);

assign input_V_0_load_B = (input_V_0_sel_wr & input_V_0_state_cmp_full);

assign input_V_0_sel = input_V_0_sel_rd;

assign input_V_0_state_cmp_full = ((input_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign input_V_0_vld_in = input_V_TVALID;

assign input_V_0_vld_out = input_V_0_state[1'b0];

assign input_V_TREADY = input_V_0_state[1'b1];

assign ireg_V_1_fu_855_p1 = grp_fu_498_p1;

assign ireg_V_2_fu_1144_p1 = grp_fu_498_p1;

assign ireg_V_3_fu_1237_p1 = d_assign_3_fu_501_p1;

assign ireg_V_4_fu_2559_p1 = grp_fu_498_p1;

assign ireg_V_fu_534_p1 = grp_fu_498_p1;

assign isneg_3_fu_863_p3 = ireg_V_1_fu_855_p1[ap_const_lv32_3F];

assign isneg_4_fu_2567_p3 = ireg_V_4_fu_2559_p1[ap_const_lv32_3F];

assign isneg_fu_542_p3 = ireg_V_fu_534_p1[ap_const_lv32_3F];

assign j_1_fu_811_p2 = (j_reg_344 + ap_const_lv2_1);

assign j_2_fu_2515_p2 = (j2_reg_419 + ap_const_lv2_1);

assign j_3_fu_2835_p2 = (j4_reg_441 + ap_const_lv2_1);

assign k_1_fu_835_p2 = (k_reg_355 + ap_const_lv2_1);

assign k_2_fu_2859_p2 = (k5_reg_452 + ap_const_lv2_1);

assign k_3_fu_2539_p2 = (k3_reg_430 + ap_const_lv2_1);

assign man_V_10_fu_1512_p3 = ((isneg_2_reg_3131[0:0] === 1'b1) ? man_V_9_fu_1506_p2 : p_Result_3_fu_1502_p1);

assign man_V_13_fu_2605_p2 = (ap_const_lv54_0 - p_Result_12_fu_2601_p1);

assign man_V_14_fu_2611_p3 = ((isneg_4_fu_2567_p3[0:0] === 1'b1) ? man_V_13_fu_2605_p2 : p_Result_12_fu_2601_p1);

assign man_V_1_fu_580_p2 = (ap_const_lv54_0 - p_Result_s_fu_576_p1);

assign man_V_2_fu_586_p3 = ((isneg_fu_542_p3[0:0] === 1'b1) ? man_V_1_fu_580_p2 : p_Result_s_fu_576_p1);

assign man_V_4_fu_1336_p2 = (ap_const_lv54_0 - p_Result_2_fu_1332_p1);

assign man_V_5_fu_1342_p3 = ((isneg_1_reg_3091[0:0] === 1'b1) ? man_V_4_fu_1336_p2 : p_Result_2_fu_1332_p1);

assign man_V_7_fu_901_p2 = (ap_const_lv54_0 - p_Result_1_fu_897_p1);

assign man_V_8_fu_907_p3 = ((isneg_3_fu_863_p3[0:0] === 1'b1) ? man_V_7_fu_901_p2 : p_Result_1_fu_897_p1);

assign man_V_9_fu_1506_p2 = (ap_const_lv54_0 - p_Result_3_fu_1502_p1);

assign newSel10_fu_1075_p3 = ((sel_tmp35_fu_1069_p2[0:0] === 1'b1) ? tmp_57_fu_1010_p2 : tmp_109_fu_999_p1);

assign newSel11_fu_1089_p3 = ((sel_tmp32_fu_1046_p2[0:0] === 1'b1) ? storemerge2_fu_1003_p3 : tmp_107_reg_3062);

assign newSel12_fu_1102_p3 = ((or_cond9_fu_1083_p2[0:0] === 1'b1) ? newSel10_fu_1075_p3 : newSel11_fu_1089_p3);

assign newSel14_fu_2779_p3 = ((sel_tmp48_fu_2773_p2[0:0] === 1'b1) ? tmp_120_fu_2714_p2 : tmp_148_fu_2703_p1);

assign newSel15_fu_2793_p3 = ((sel_tmp45_fu_2750_p2[0:0] === 1'b1) ? storemerge4_fu_2707_p3 : tmp_146_reg_3538);

assign newSel16_fu_2806_p3 = ((or_cond12_fu_2787_p2[0:0] === 1'b1) ? newSel14_fu_2779_p3 : newSel15_fu_2793_p3);

assign newSel1_fu_769_p3 = ((sel_tmp9_fu_726_p2[0:0] === 1'b1) ? storemerge_fu_683_p3 : tmp_17_reg_2985);

assign newSel2_fu_782_p3 = ((or_cond_fu_763_p2[0:0] === 1'b1) ? newSel_fu_755_p3 : newSel1_fu_769_p3);

assign newSel4_fu_1453_p3 = ((sel_tmp17_fu_1447_p2[0:0] === 1'b1) ? tmp_32_fu_1387_p2 : this_assign_2_fu_1380_p3);

assign newSel5_fu_1467_p3 = ((sel_tmp13_fu_1418_p2[0:0] === 1'b1) ? tmp_56_fu_1376_p1 : tmp_49_fu_1352_p1);

assign newSel6_fu_1481_p3 = ((or_cond3_fu_1461_p2[0:0] === 1'b1) ? newSel4_fu_1453_p3 : newSel5_fu_1467_p3);

assign newSel7_fu_1651_p3 = ((or_cond6_fu_1631_p2[0:0] === 1'b1) ? newSel8_fu_1623_p3 : newSel9_fu_1637_p3);

assign newSel8_fu_1623_p3 = ((sel_tmp28_fu_1617_p2[0:0] === 1'b1) ? tmp_52_fu_1557_p2 : this_assign_3_fu_1550_p3);

assign newSel9_fu_1637_p3 = ((sel_tmp22_fu_1588_p2[0:0] === 1'b1) ? tmp_82_fu_1546_p1 : tmp_76_fu_1522_p1);

assign newSel_fu_755_p3 = ((sel_tmp4_fu_749_p2[0:0] === 1'b1) ? tmp_12_fu_690_p2 : tmp_23_fu_679_p1);

assign notlhs1_fu_2201_p2 = ((exp_V_20_fu_2174_p2 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs_fu_2119_p2 = ((exp_V_19_fu_2092_p2 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_2207_p2 = ((tmp_113_fu_2197_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs_fu_2125_p2 = ((tmp_111_fu_2115_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign op2_assign_fu_1785_p2 = (ap_const_lv6_1F - i_i_reg_408);

assign or_cond10_fu_1096_p2 = (sel_tmp32_fu_1046_p2 | sel_tmp27_fu_1020_p2);

assign or_cond11_fu_1110_p2 = (or_cond9_fu_1083_p2 | or_cond10_fu_1096_p2);

assign or_cond12_fu_2787_p2 = (sel_tmp48_fu_2773_p2 | sel_tmp46_fu_2756_p2);

assign or_cond13_fu_2800_p2 = (sel_tmp45_fu_2750_p2 | sel_tmp41_fu_2724_p2);

assign or_cond14_fu_2814_p2 = (or_cond12_fu_2787_p2 | or_cond13_fu_2800_p2);

assign or_cond1_fu_776_p2 = (sel_tmp9_fu_726_p2 | sel_tmp2_fu_700_p2);

assign or_cond2_fu_790_p2 = (or_cond_fu_763_p2 | or_cond1_fu_776_p2);

assign or_cond3_fu_1461_p2 = (sel_tmp17_fu_1447_p2 | sel_tmp15_fu_1430_p2);

assign or_cond4_fu_1475_p2 = (sel_tmp13_fu_1418_p2 | sel_tmp10_fu_1398_p2);

assign or_cond5_fu_1489_p2 = (or_cond3_fu_1461_p2 | or_cond4_fu_1475_p2);

assign or_cond6_fu_1631_p2 = (sel_tmp28_fu_1617_p2 | sel_tmp24_fu_1600_p2);

assign or_cond7_fu_1645_p2 = (sel_tmp22_fu_1588_p2 | sel_tmp19_fu_1568_p2);

assign or_cond8_fu_1659_p2 = (or_cond6_fu_1631_p2 | or_cond7_fu_1645_p2);

assign or_cond9_fu_1083_p2 = (sel_tmp35_fu_1069_p2 | sel_tmp33_fu_1052_p2);

assign or_cond_fu_763_p2 = (sel_tmp4_fu_749_p2 | sel_tmp_fu_732_p2);

assign output_V_1_ack_in = output_V_1_state[1'b1];

assign output_V_1_ack_out = output_V_TREADY;

assign output_V_1_load_A = (output_V_1_state_cmp_full & ~output_V_1_sel_wr);

assign output_V_1_load_B = (output_V_1_sel_wr & output_V_1_state_cmp_full);

assign output_V_1_sel = output_V_1_sel_rd;

assign output_V_1_state_cmp_full = ((output_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign output_V_1_vld_out = output_V_1_state[1'b0];

assign output_V_TDATA = output_V_1_data_out;

assign output_V_TVALID = output_V_1_state[1'b0];

assign p_0364_1_i_fu_1833_p3 = ((tmp_128_fu_1757_p3[0:0] === 1'b1) ? s_V_2_fu_1827_p2 : s_V_1_fu_1801_p2);

assign p_Result_10_fu_2451_p5 = {{res_V_22_fu_2431_p1[32'd31 : 32'd31]}, {exp_V_24_fu_2445_p2}, {res_V_22_fu_2431_p1[32'd22 : 32'd0]}};

assign p_Result_11_fu_2490_p5 = {{res_V_23_fu_2470_p1[32'd31 : 32'd31]}, {exp_V_25_fu_2484_p2}, {res_V_23_fu_2470_p1[32'd22 : 32'd0]}};

assign p_Result_12_fu_2601_p1 = tmp_105_fu_2593_p3;

assign p_Result_13_fu_2923_p5 = {{res_V_24_fu_2904_p1[32'd31 : 32'd31]}, {exp_V_26_fu_2917_p2}, {res_V_24_fu_2904_p1[32'd22 : 32'd0]}};

assign p_Result_1_fu_897_p1 = tmp_58_fu_889_p3;

assign p_Result_2_fu_1332_p1 = tmp_19_fu_1325_p3;

assign p_Result_3_fu_1502_p1 = tmp_35_fu_1495_p3;

assign p_Result_4_fu_2059_p5 = {{res_V_17_fu_2039_p1[32'd31 : 32'd31]}, {exp_V_18_fu_2053_p2}, {res_V_17_fu_2039_p1[32'd22 : 32'd0]}};

assign p_Result_5_fu_2098_p5 = {{res_V_18_fu_2078_p1[32'd63 : 32'd63]}, {exp_V_19_fu_2092_p2}, {res_V_18_fu_2078_p1[32'd51 : 32'd0]}};

assign p_Result_6_fu_2180_p5 = {{res_V_fu_2160_p1[32'd63 : 32'd63]}, {exp_V_20_fu_2174_p2}, {res_V_fu_2160_p1[32'd51 : 32'd0]}};

assign p_Result_7_fu_2273_p5 = {{res_V_19_fu_2253_p1[32'd31 : 32'd31]}, {exp_V_21_fu_2267_p2}, {res_V_19_fu_2253_p1[32'd22 : 32'd0]}};

assign p_Result_8_fu_2367_p5 = {{res_V_20_fu_2347_p1[32'd31 : 32'd31]}, {exp_V_22_fu_2361_p2}, {res_V_20_fu_2347_p1[32'd22 : 32'd0]}};

assign p_Result_9_fu_2412_p5 = {{res_V_21_fu_2392_p1[32'd31 : 32'd31]}, {exp_V_23_fu_2406_p2}, {res_V_21_fu_2392_p1[32'd22 : 32'd0]}};

assign p_Result_s_fu_576_p1 = tmp_4_fu_568_p3;

assign p_Val2_17_fu_2022_p2 = (tmp_70_fu_2014_p3 - x_V_q1);

assign p_Val2_19_fu_2153_p3 = ((sel_tmp37_fu_2148_p2[0:0] === 1'b1) ? ang_V_assign_fu_2143_p2 : p_Val2_17_reg_3324);

assign p_Val2_21_fu_1974_p2 = ($signed(ap_const_lv33_0) - $signed(tmp_91_fu_1971_p1));

assign p_Val2_29_fu_2292_p1 = grp_fu_1952_p2[31:0];

assign p_Val2_2_fu_1665_p3 = ((or_cond5_reg_3176[0:0] === 1'b1) ? newSel6_reg_3171 : ap_const_lv32_0);

assign p_Val2_30_fu_2302_p1 = p_Val2_15_reg_3387[31:0];

assign p_Val2_31_fu_2326_p2 = (ap_const_lv32_0 - p_Val2_30_reg_3397);

assign p_Val2_32_fu_2317_p1 = p_Val2_23_reg_3409[31:0];

assign p_Val2_33_fu_2341_p2 = (ap_const_lv32_0 - p_Val2_32_reg_3414);

assign p_Val2_34_fu_2379_p2 = (ap_const_lv32_0 - p_Val2_35_reg_3426);

assign p_Val2_35_fu_2332_p1 = p_Val2_26_reg_3392[31:0];

assign p_Val2_5_fu_1677_p3 = ((or_cond8_reg_3186[0:0] === 1'b1) ? newSel7_reg_3181 : ap_const_lv32_0);

assign p_Val2_7_fu_1683_p2 = (p_Val2_5_fu_1677_p3 - x_V_q1);

assign p_Val2_8_fu_1671_p2 = (p_Val2_2_fu_1665_p3 - x_V_q0);

assign p_Val2_9_fu_1707_p2 = (tmp_77_cast_reg_3218 + tmp_78_cast_reg_3223);

assign p_Val2_s_fu_2311_p2 = (ap_const_lv32_0 - p_Val2_29_reg_3375);

assign p_v_fu_1907_p3 = ((tmp_156_i_fu_1875_p2[0:0] === 1'b1) ? tmp_64_fu_1887_p4 : tmp_65_fu_1897_p4);

assign q_V_1_fu_1865_p2 = (q_star_V_fu_1857_p3 | ap_const_lv32_1);

assign q_V_fu_1881_p2 = (ap_const_lv32_1 + p_i_reg_377);

assign q_star_V_fu_1857_p3 = {{tmp_141_fu_1849_p3}, {1'b0}};

assign r_V_1_fu_1795_p2 = r_V_fu_1779_p2 << tmp_161_i_fu_1791_p1;

assign r_V_2_fu_1815_p2 = (tmp_164_i_fu_1807_p3 | ap_const_lv34_3);

assign r_V_3_fu_1821_p2 = r_V_2_fu_1815_p2 << tmp_161_i_fu_1791_p1;

assign r_V_fu_1779_p2 = (tmp_160_i_fu_1771_p3 | ap_const_lv34_1);

assign res_V_17_fu_2039_p1 = grp_fu_492_p1;

assign res_V_18_fu_2078_p1 = reg_513;

assign res_V_19_fu_2253_p1 = grp_fu_495_p1;

assign res_V_20_fu_2347_p1 = grp_fu_495_p1;

assign res_V_21_fu_2392_p1 = grp_fu_495_p1;

assign res_V_22_fu_2431_p1 = grp_fu_495_p1;

assign res_V_23_fu_2470_p1 = grp_fu_495_p1;

assign res_V_24_fu_2904_p1 = dp_10_reg_3595;

assign res_V_fu_2160_p1 = reg_513;

assign s_V_1_fu_1801_p2 = (tmp_129_fu_1765_p2 - r_V_1_fu_1795_p2);

assign s_V_2_fu_1827_p2 = (r_V_3_fu_1821_p2 + tmp_129_fu_1765_p2);

assign s_V_fu_1741_p1 = val_assign_fu_1731_p4;

assign sel_tmp101_demorgan_fu_1436_p2 = (sel_tmp86_demorgan_fu_1403_p2 | tmp_21_reg_3108);

assign sel_tmp10_fu_1398_p2 = (tmp_28_reg_3120 & sel_tmp5_fu_1393_p2);

assign sel_tmp110_demorgan_fu_1573_p2 = (tmp_37_reg_3142 | tmp_46_reg_3160);

assign sel_tmp11_fu_1407_p2 = (sel_tmp86_demorgan_fu_1403_p2 ^ 1'b1);

assign sel_tmp125_demorgan_fu_1606_p2 = (sel_tmp110_demorgan_fu_1573_p2 | tmp_42_reg_3148);

assign sel_tmp12_fu_1413_p2 = (tmp_21_reg_3108 & sel_tmp11_fu_1407_p2);

assign sel_tmp13_fu_1418_p2 = (sel_tmp12_fu_1413_p2 & tmp_29_fu_1356_p2);

assign sel_tmp14_fu_1424_p2 = (tmp_29_fu_1356_p2 ^ 1'b1);

assign sel_tmp15_fu_1430_p2 = (sel_tmp12_fu_1413_p2 & sel_tmp14_fu_1424_p2);

assign sel_tmp16_fu_1441_p2 = (sel_tmp101_demorgan_fu_1436_p2 ^ 1'b1);

assign sel_tmp17_fu_1447_p2 = (icmp1_fu_1361_p2 & sel_tmp16_fu_1441_p2);

assign sel_tmp18_fu_1563_p2 = (tmp_37_reg_3142 ^ 1'b1);

assign sel_tmp19_fu_1568_p2 = (tmp_46_reg_3160 & sel_tmp18_fu_1563_p2);

assign sel_tmp1_fu_695_p2 = (tmp_2_reg_2961 ^ 1'b1);

assign sel_tmp20_fu_1577_p2 = (sel_tmp110_demorgan_fu_1573_p2 ^ 1'b1);

assign sel_tmp21_demorgan_fu_738_p2 = (sel_tmp6_demorgan_fu_705_p2 | tmp_5_reg_2967);

assign sel_tmp21_fu_1583_p2 = (tmp_42_reg_3148 & sel_tmp20_fu_1577_p2);

assign sel_tmp22_fu_1588_p2 = (sel_tmp21_fu_1583_p2 & tmp_48_fu_1526_p2);

assign sel_tmp23_fu_1594_p2 = (tmp_48_fu_1526_p2 ^ 1'b1);

assign sel_tmp24_fu_1600_p2 = (sel_tmp21_fu_1583_p2 & sel_tmp23_fu_1594_p2);

assign sel_tmp25_fu_1611_p2 = (sel_tmp125_demorgan_fu_1606_p2 ^ 1'b1);

assign sel_tmp26_fu_1015_p2 = (tmp_27_reg_3038 ^ 1'b1);

assign sel_tmp27_fu_1020_p2 = (tmp_41_reg_3056 & sel_tmp26_fu_1015_p2);

assign sel_tmp28_fu_1617_p2 = (icmp2_fu_1531_p2 & sel_tmp25_fu_1611_p2);

assign sel_tmp29_fu_1029_p2 = (sel_tmp31_demorgan_fu_1025_p2 ^ 1'b1);

assign sel_tmp2_fu_700_p2 = (tmp_9_reg_2979 & sel_tmp1_fu_695_p2);

assign sel_tmp30_fu_1035_p2 = (tmp_38_reg_3044 & sel_tmp29_fu_1029_p2);

assign sel_tmp31_demorgan_fu_1025_p2 = (tmp_27_reg_3038 | tmp_41_reg_3056);

assign sel_tmp31_fu_1040_p2 = (tmp_47_fu_980_p2 ^ 1'b1);

assign sel_tmp32_fu_1046_p2 = (sel_tmp30_fu_1035_p2 & sel_tmp31_fu_1040_p2);

assign sel_tmp33_fu_1052_p2 = (sel_tmp30_fu_1035_p2 & tmp_47_fu_980_p2);

assign sel_tmp34_fu_1063_p2 = (sel_tmp46_demorgan_fu_1058_p2 ^ 1'b1);

assign sel_tmp35_fu_1069_p2 = (icmp3_fu_985_p2 & sel_tmp34_fu_1063_p2);

assign sel_tmp36_fu_2028_p2 = ((tmp_70_fu_2014_p3 != x_V_q1) ? 1'b1 : 1'b0);

assign sel_tmp37_fu_2148_p2 = (sel_tmp36_reg_3331 & tmp_74_fu_2137_p2);

assign sel_tmp38_fu_2230_p2 = ((p_Val2_19_reg_3346 != ap_const_lv32_0) ? 1'b1 : 1'b0);

assign sel_tmp39_fu_2235_p2 = (sel_tmp38_fu_2230_p2 & tmp_79_fu_2219_p2);

assign sel_tmp3_fu_743_p2 = (sel_tmp21_demorgan_fu_738_p2 ^ 1'b1);

assign sel_tmp40_fu_2719_p2 = (tmp_106_reg_3514 ^ 1'b1);

assign sel_tmp41_fu_2724_p2 = (tmp_116_reg_3532 & sel_tmp40_fu_2719_p2);

assign sel_tmp42_fu_2733_p2 = (sel_tmp59_demorgan_fu_2729_p2 ^ 1'b1);

assign sel_tmp43_fu_2739_p2 = (tmp_112_reg_3520 & sel_tmp42_fu_2733_p2);

assign sel_tmp44_fu_2744_p2 = (tmp_117_fu_2684_p2 ^ 1'b1);

assign sel_tmp45_fu_2750_p2 = (sel_tmp43_fu_2739_p2 & sel_tmp44_fu_2744_p2);

assign sel_tmp46_demorgan_fu_1058_p2 = (sel_tmp31_demorgan_fu_1025_p2 | tmp_38_reg_3044);

assign sel_tmp46_fu_2756_p2 = (sel_tmp43_fu_2739_p2 & tmp_117_fu_2684_p2);

assign sel_tmp47_fu_2767_p2 = (sel_tmp74_demorgan_fu_2762_p2 ^ 1'b1);

assign sel_tmp48_fu_2773_p2 = (icmp4_fu_2689_p2 & sel_tmp47_fu_2767_p2);

assign sel_tmp4_fu_749_p2 = (icmp_fu_665_p2 & sel_tmp3_fu_743_p2);

assign sel_tmp59_demorgan_fu_2729_p2 = (tmp_106_reg_3514 | tmp_116_reg_3532);

assign sel_tmp5_fu_1393_p2 = (tmp_20_reg_3102 ^ 1'b1);

assign sel_tmp6_demorgan_fu_705_p2 = (tmp_2_reg_2961 | tmp_9_reg_2979);

assign sel_tmp6_fu_709_p2 = (sel_tmp6_demorgan_fu_705_p2 ^ 1'b1);

assign sel_tmp74_demorgan_fu_2762_p2 = (sel_tmp59_demorgan_fu_2729_p2 | tmp_112_reg_3520);

assign sel_tmp7_fu_715_p2 = (tmp_5_reg_2967 & sel_tmp6_fu_709_p2);

assign sel_tmp86_demorgan_fu_1403_p2 = (tmp_20_reg_3102 | tmp_28_reg_3120);

assign sel_tmp8_fu_720_p2 = (tmp_3_fu_660_p2 ^ 1'b1);

assign sel_tmp9_fu_726_p2 = (sel_tmp7_fu_715_p2 & sel_tmp8_fu_720_p2);

assign sel_tmp_fu_732_p2 = (sel_tmp7_fu_715_p2 & tmp_3_fu_660_p2);

assign sh_amt_1_cast_fu_1349_p1 = $signed(sh_amt_1_reg_3114);

assign sh_amt_1_fu_1208_p3 = ((tmp_21_fu_1190_p2[0:0] === 1'b1) ? tmp_24_fu_1196_p2 : tmp_26_fu_1202_p2);

assign sh_amt_2_cast_fu_977_p1 = $signed(sh_amt_2_reg_3050);

assign sh_amt_2_fu_945_p3 = ((tmp_38_fu_927_p2[0:0] === 1'b1) ? tmp_39_fu_933_p2 : tmp_40_fu_939_p2);

assign sh_amt_3_cast_fu_1519_p1 = $signed(sh_amt_3_reg_3154);

assign sh_amt_3_fu_1301_p3 = ((tmp_42_fu_1283_p2[0:0] === 1'b1) ? tmp_44_fu_1289_p2 : tmp_45_fu_1295_p2);

assign sh_amt_4_cast_fu_2681_p1 = $signed(sh_amt_4_reg_3526);

assign sh_amt_4_fu_2649_p3 = ((tmp_112_fu_2631_p2[0:0] === 1'b1) ? tmp_114_fu_2637_p2 : tmp_115_fu_2643_p2);

assign sh_amt_cast_fu_657_p1 = $signed(sh_amt_reg_2973);

assign sh_amt_fu_624_p3 = ((tmp_5_fu_606_p2[0:0] === 1'b1) ? tmp_7_fu_612_p2 : tmp_8_fu_618_p2);

assign storemerge2_fu_1003_p3 = ((isneg_3_reg_3028[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : ap_const_lv32_0);

assign storemerge4_fu_2707_p3 = ((isneg_4_reg_3504[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : ap_const_lv32_0);

assign storemerge_fu_683_p3 = ((isneg_reg_2951[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : ap_const_lv32_0);

assign this_assign_2_fu_1380_p3 = ((isneg_1_reg_3091[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : ap_const_lv32_0);

assign this_assign_3_fu_1550_p3 = ((isneg_2_reg_3131[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : ap_const_lv32_0);

assign tmp_100_fu_2521_p3 = {{j2_reg_419}, {1'b0}};

assign tmp_101_fu_2841_p3 = {{j4_reg_441}, {1'b0}};

assign tmp_102_fu_2549_p2 = (tmp_115_cast_fu_2545_p1 + tmp_113_cast_reg_3486);

assign tmp_103_fu_885_p1 = ireg_V_1_fu_855_p1[51:0];

assign tmp_104_fu_2585_p1 = exp_tmp_V_4_fu_2575_p4;

assign tmp_105_fu_2593_p3 = {{1'b1}, {tmp_145_fu_2589_p1}};

assign tmp_106_fu_2619_p2 = ((tmp_143_fu_2563_p1 == ap_const_lv63_0) ? 1'b1 : 1'b0);

assign tmp_107_fu_959_p1 = man_V_8_fu_907_p3[31:0];

assign tmp_109_fu_999_p1 = tmp_55_fu_994_p2[31:0];

assign tmp_10_fu_538_p1 = ireg_V_fu_534_p1[62:0];

assign tmp_110_fu_2010_p1 = grp_cordic_atan2_fu_463_ap_return[14:0];

assign tmp_111_fu_2115_p1 = res_V_18_fu_2078_p1[51:0];

assign tmp_112_fu_2631_p2 = (($signed(F2_4_fu_2625_p2) > $signed(12'b11101)) ? 1'b1 : 1'b0);

assign tmp_113_cast_fu_2529_p1 = tmp_100_fu_2521_p3;

assign tmp_113_fu_2197_p1 = res_V_fu_2160_p1[51:0];

assign tmp_114_fu_2637_p2 = ($signed(ap_const_lv12_FE3) + $signed(F2_4_fu_2625_p2));

assign tmp_115_cast_fu_2545_p1 = k3_reg_430;

assign tmp_115_fu_2643_p2 = (ap_const_lv12_1D - F2_4_fu_2625_p2);

assign tmp_116_fu_2657_p2 = ((F2_4_fu_2625_p2 == ap_const_lv12_1D) ? 1'b1 : 1'b0);

assign tmp_117_fu_2684_p2 = ((sh_amt_4_reg_3526 < ap_const_lv12_36) ? 1'b1 : 1'b0);

assign tmp_118_fu_2694_p1 = $unsigned(sh_amt_4_cast_fu_2681_p1);

assign tmp_119_fu_2698_p2 = $signed(man_V_14_reg_3509) >>> tmp_118_fu_2694_p1;

assign tmp_11_fu_674_p2 = $signed(man_V_2_reg_2956) >>> tmp_s_fu_670_p1;

assign tmp_120_fu_2714_p2 = tmp_146_reg_3538 << sh_amt_4_cast_fu_2681_p1;

assign tmp_121_fu_2869_p2 = (tmp_138_cast_reg_3557 + tmp_129_cast_fu_2865_p1);

assign tmp_122_fu_2880_p1 = $signed(Sf_V_q0);

assign tmp_123_fu_2884_p1 = $signed(R_V_q0);

assign tmp_124_fu_2888_p2 = ($signed(tmp_123_fu_2884_p1) + $signed(tmp_122_fu_2880_p1));

assign tmp_125_fu_2894_p2 = ((tmp_124_fu_2888_p2 == ap_const_lv33_0) ? 1'b1 : 1'b0);

assign tmp_126_fu_2935_p3 = ((tmp_125_reg_3585[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_13_fu_2923_p5);

assign tmp_128_fu_1757_p3 = p_2_i_reg_399[ap_const_lv32_21];

assign tmp_129_cast_fu_2865_p1 = k5_reg_452;

assign tmp_129_fu_1765_p2 = p_2_i_reg_399 << ap_const_lv34_1;

assign tmp_12_fu_690_p2 = tmp_17_reg_2985 << sh_amt_cast_fu_657_p1;

assign tmp_136_fu_1841_p1 = p_1_i_reg_388[30:0];

assign tmp_138_cast_fu_2849_p1 = tmp_101_fu_2841_p3;

assign tmp_138_fu_1845_p1 = p_i_reg_377[30:0];

assign tmp_139_cast_fu_2677_p1 = tmp_102_reg_3499;

assign tmp_13_fu_1129_p2 = (($signed(i1_cast_fu_1125_p1) < $signed(tmp_149_reg_3073)) ? 1'b1 : 1'b0);

assign tmp_140_cast_fu_2874_p1 = tmp_121_fu_2869_p2;

assign tmp_141_fu_1849_p3 = ((tmp_128_fu_1757_p3[0:0] === 1'b1) ? tmp_136_fu_1841_p1 : tmp_138_fu_1845_p1);

assign tmp_143_fu_2563_p1 = ireg_V_4_fu_2559_p1[62:0];

assign tmp_145_fu_2589_p1 = ireg_V_4_fu_2559_p1[51:0];

assign tmp_146_fu_2663_p1 = man_V_14_fu_2611_p3[31:0];

assign tmp_148_fu_2703_p1 = tmp_119_fu_2698_p2[31:0];

assign tmp_14_fu_817_p3 = {{j_reg_344}, {1'b0}};

assign tmp_156_i_fu_1875_p2 = (($signed(p_2_i_reg_399) > $signed(34'b0000000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign tmp_15_fu_564_p1 = ireg_V_fu_534_p1[51:0];

assign tmp_160_i_fu_1771_p3 = {{p_i_reg_377}, {ap_const_lv2_0}};

assign tmp_161_i_fu_1791_p1 = op2_assign_fu_1785_p2;

assign tmp_164_i_fu_1807_p3 = {{p_1_i_reg_388}, {ap_const_lv2_0}};

assign tmp_17_fu_638_p1 = man_V_2_fu_586_p3[31:0];

assign tmp_18_fu_1170_p1 = exp_tmp_V_1_fu_1160_p4;

assign tmp_19_fu_1325_p3 = {{1'b1}, {tmp_43_reg_3097}};

assign tmp_1_fu_652_p1 = i_reg_332;

assign tmp_20_fu_1178_p2 = ((tmp_36_fu_1148_p1 == ap_const_lv63_0) ? 1'b1 : 1'b0);

assign tmp_21_fu_1190_p2 = (($signed(F2_1_fu_1184_p2) > $signed(12'b11101)) ? 1'b1 : 1'b0);

assign tmp_23_cast_fu_841_p1 = k_reg_355;

assign tmp_23_fu_679_p1 = tmp_11_fu_674_p2[31:0];

assign tmp_24_fu_1196_p2 = ($signed(ap_const_lv12_FE3) + $signed(F2_1_fu_1184_p2));

assign tmp_25_fu_881_p1 = exp_tmp_V_2_fu_871_p4;

assign tmp_26_fu_1202_p2 = (ap_const_lv12_1D - F2_1_fu_1184_p2);

assign tmp_27_fu_915_p2 = ((tmp_93_fu_859_p1 == ap_const_lv63_0) ? 1'b1 : 1'b0);

assign tmp_28_fu_1216_p2 = ((F2_1_fu_1184_p2 == ap_const_lv12_1D) ? 1'b1 : 1'b0);

assign tmp_29_fu_1356_p2 = ((sh_amt_1_reg_3114 < ap_const_lv12_36) ? 1'b1 : 1'b0);

assign tmp_2_fu_594_p2 = ((tmp_10_fu_538_p1 == ap_const_lv63_0) ? 1'b1 : 1'b0);

assign tmp_30_fu_1366_p1 = $unsigned(sh_amt_1_cast_fu_1349_p1);

assign tmp_31_fu_1370_p2 = $signed(man_V_5_fu_1342_p3) >>> tmp_30_fu_1366_p1;

assign tmp_32_fu_1387_p2 = tmp_49_fu_1352_p1 << sh_amt_1_cast_fu_1349_p1;

assign tmp_34_fu_1263_p1 = exp_tmp_V_3_fu_1253_p4;

assign tmp_35_fu_1495_p3 = {{1'b1}, {tmp_72_reg_3137}};

assign tmp_36_fu_1148_p1 = ireg_V_2_fu_1144_p1[62:0];

assign tmp_37_fu_1271_p2 = ((tmp_63_fu_1241_p1 == ap_const_lv63_0) ? 1'b1 : 1'b0);

assign tmp_38_fu_927_p2 = (($signed(F2_2_fu_921_p2) > $signed(12'b11101)) ? 1'b1 : 1'b0);

assign tmp_39_fu_933_p2 = ($signed(ap_const_lv12_FE3) + $signed(F2_2_fu_921_p2));

assign tmp_3_fu_660_p2 = ((sh_amt_reg_2973 < ap_const_lv12_36) ? 1'b1 : 1'b0);

assign tmp_40_fu_939_p2 = (ap_const_lv12_1D - F2_2_fu_921_p2);

assign tmp_41_fu_953_p2 = ((F2_2_fu_921_p2 == ap_const_lv12_1D) ? 1'b1 : 1'b0);

assign tmp_42_fu_1283_p2 = (($signed(F2_3_fu_1277_p2) > $signed(12'b11101)) ? 1'b1 : 1'b0);

assign tmp_43_fu_1174_p1 = ireg_V_2_fu_1144_p1[51:0];

assign tmp_44_fu_1289_p2 = ($signed(ap_const_lv12_FE3) + $signed(F2_3_fu_1277_p2));

assign tmp_45_fu_1295_p2 = (ap_const_lv12_1D - F2_3_fu_1277_p2);

assign tmp_46_fu_1309_p2 = ((F2_3_fu_1277_p2 == ap_const_lv12_1D) ? 1'b1 : 1'b0);

assign tmp_47_fu_980_p2 = ((sh_amt_2_reg_3050 < ap_const_lv12_36) ? 1'b1 : 1'b0);

assign tmp_48_fu_1526_p2 = ((sh_amt_3_reg_3154 < ap_const_lv12_36) ? 1'b1 : 1'b0);

assign tmp_49_fu_1352_p1 = man_V_5_fu_1342_p3[31:0];

assign tmp_4_fu_568_p3 = {{1'b1}, {tmp_15_fu_564_p1}};

assign tmp_50_fu_1536_p1 = $unsigned(sh_amt_3_cast_fu_1519_p1);

assign tmp_51_fu_1540_p2 = $signed(man_V_10_fu_1512_p3) >>> tmp_50_fu_1536_p1;

assign tmp_52_fu_1557_p2 = tmp_76_fu_1522_p1 << sh_amt_3_cast_fu_1519_p1;

assign tmp_54_fu_990_p1 = $unsigned(sh_amt_2_cast_fu_977_p1);

assign tmp_55_fu_994_p2 = $signed(man_V_8_reg_3033) >>> tmp_54_fu_990_p1;

assign tmp_56_fu_1376_p1 = tmp_31_fu_1370_p2[31:0];

assign tmp_57_fu_1010_p2 = tmp_107_reg_3062 << sh_amt_2_cast_fu_977_p1;

assign tmp_58_fu_889_p3 = {{1'b1}, {tmp_103_fu_885_p1}};

assign tmp_59_fu_1689_p1 = $signed(p_Val2_8_reg_3191);

assign tmp_5_fu_606_p2 = (($signed(F2_fu_600_p2) > $signed(12'b11101)) ? 1'b1 : 1'b0);

assign tmp_61_fu_1692_p1 = $signed(p_Val2_7_reg_3198);

assign tmp_62_fu_845_p2 = (tmp_23_cast_fu_841_p1 + tmp_66_cast_reg_3004);

assign tmp_63_fu_1241_p1 = ireg_V_3_fu_1237_p1[62:0];

assign tmp_64_fu_1887_p4 = {{q_V_fu_1881_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_65_fu_1897_p4 = {{p_i_reg_377[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_66_cast_fu_825_p1 = tmp_14_fu_817_p3;

assign tmp_66_fu_1915_p2 = ((p_v_fu_1907_p3 == ap_const_lv31_0) ? 1'b1 : 1'b0);

assign tmp_67_fu_2071_p3 = ((tmp_66_reg_3272[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_4_reg_3336);

assign tmp_68_cast_fu_973_p1 = tmp_62_reg_3023;

assign tmp_6_fu_560_p1 = exp_tmp_V_fu_550_p4;

assign tmp_70_fu_2014_p3 = {{tmp_110_fu_2010_p1}, {ap_const_lv17_0}};

assign tmp_71_fu_2131_p2 = (notrhs_fu_2125_p2 | notlhs_fu_2119_p2);

assign tmp_72_fu_1267_p1 = ireg_V_3_fu_1237_p1[51:0];

assign tmp_74_fu_2137_p2 = (tmp_71_fu_2131_p2 & grp_fu_504_p2);

assign tmp_75_fu_2213_p2 = (notrhs1_fu_2207_p2 | notlhs1_fu_2201_p2);

assign tmp_76_fu_1522_p1 = man_V_10_fu_1512_p3[31:0];

assign tmp_79_fu_2219_p2 = (tmp_75_fu_2213_p2 & grp_fu_504_p2);

assign tmp_7_fu_612_p2 = ($signed(ap_const_lv12_FE3) + $signed(F2_fu_600_p2));

assign tmp_80_fu_2248_p2 = ((ang_V_assign_4_reg_3354 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_81_fu_2285_p3 = ((tmp_80_reg_3360[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_7_reg_3365);

assign tmp_82_fu_1546_p1 = tmp_51_fu_1540_p2[31:0];

assign tmp_83_fu_1941_p3 = {{p_Val2_8_reg_3191}, {ap_const_lv29_0}};

assign tmp_84_fu_1948_p1 = p_v_fu_1907_p3;

assign tmp_85_fu_2296_p2 = ((p_Val2_29_fu_2292_p1 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_86_fu_2385_p3 = ((tmp_85_reg_3382[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_8_reg_3438);

assign tmp_89_fu_2305_p2 = ((p_Val2_30_fu_2302_p1 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_8_fu_618_p2 = (ap_const_lv12_1D - F2_fu_600_p2);

assign tmp_90_fu_2424_p3 = ((tmp_89_reg_3404[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_9_reg_3448);

assign tmp_91_fu_1971_p1 = $signed(p_Val2_7_reg_3198);

assign tmp_93_fu_859_p1 = ireg_V_1_fu_855_p1[62:0];

assign tmp_95_fu_2320_p2 = ((p_Val2_32_fu_2317_p1 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_96_fu_2463_p3 = ((tmp_95_reg_3421[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_10_reg_3458);

assign tmp_98_fu_2335_p2 = ((p_Val2_35_fu_2332_p1 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_99_fu_2502_p3 = ((tmp_98_reg_3433[0:0] === 1'b1) ? ap_const_lv32_0 : p_Result_11_reg_3468);

assign tmp_9_fu_632_p2 = ((F2_fu_600_p2 == ap_const_lv12_1D) ? 1'b1 : 1'b0);

assign tmp_i_cast_fu_1721_p1 = d2_V_fu_1711_p4;

assign tmp_i_fu_1725_p2 = (ap_const_lv33_1 + tmp_i_cast_fu_1721_p1);

assign tmp_s_fu_670_p1 = $unsigned(sh_amt_cast_fu_657_p1);

assign v_assign_1_fu_1140_p1 = tmp_33_reg_3086;

assign v_assign_2_fu_850_p1 = input_V_0_data_out;

assign v_assign_4_fu_2554_p1 = input_V_0_data_out;

assign v_assign_fu_529_p1 = input_V_0_data_out;

assign val_assign_fu_1731_p4 = {{tmp_i_fu_1725_p2[ap_const_lv32_20 : ap_const_lv32_1]}};

assign x_V_d0 = ((or_cond2_fu_790_p2[0:0] === 1'b1) ? newSel2_fu_782_p3 : ap_const_lv32_0);

always @ (posedge ap_clk) begin
    tmp_66_cast_reg_3004[0] <= 1'b0;
    tmp_66_cast_reg_3004[3] <= 1'b0;
    tmp_113_cast_reg_3486[0] <= 1'b0;
    tmp_113_cast_reg_3486[3] <= 1'b0;
    tmp_138_cast_reg_3557[0] <= 1'b0;
    tmp_138_cast_reg_3557[3] <= 1'b0;
    p_1_i_reg_388[0] <= 1'b0;
end

endmodule //toplevel
